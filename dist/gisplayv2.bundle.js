var lol = 3;
var GisplayLibrary =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 11);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* unknown exports provided */
/* all exports used */
/*!********************************!*\
  !*** ./src/ES6Test/Gisplay.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Gisplay = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //@TODO Estas variaveis ate a classe sao para remover\n\n\nvar _Choropleth = __webpack_require__(/*! ./Maps/Choropleth */ 5);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Gisplay API with one method for each map available.\r\n */\nvar Gisplay = exports.Gisplay = function () {\n    function Gisplay() {\n        _classCallCheck(this, Gisplay);\n\n        console.log(\"Gisplay Class constructor\");\n        window.profiling = true;\n        window.maps = new Array();\n        window.mapcount = 0;\n\n        //WebGL API\n        window._vertexcount = 0;\n        window._tricount = 0;\n        return this;\n    }\n\n    _createClass(Gisplay, [{\n        key: \"makeChoropleth\",\n        value: function makeChoropleth(bgmap, geometry, options) {\n            if (this.profiling == true) this.startTimeStamp = Date.now();\n            /*console.log(options)*/\n            var gismap = new _Choropleth.Choropleth(bgmap, geometry, options);\n            this.makeMap(gismap, options); //options.defaultid);\n        }\n    }, {\n        key: \"makeDotMap\",\n        value: function makeDotMap(bgmap, geometry, options) {\n            if (this.profiling == true) this.startTimeStamp = Date.now();\n            var gismap = new DotMap(bgmap, geometry, options);\n            this.makeMap(gismap, options.defaultid);\n        }\n    }, {\n        key: \"makeProportionalSymbolsMap\",\n        value: function makeProportionalSymbolsMap(bgmap, geometry, options) {\n            if (this.profiling == true) this.startTimeStamp = Date.now();\n            var gismap = new PSymbolsMap(bgmap, geometry, options);\n            this.makeMap(gismap);\n        }\n    }, {\n        key: \"makeChangeMap\",\n        value: function makeChangeMap(bgmap, geometry, options) {\n            if (this.profiling == true) this.startTimeStamp = Date.now();\n            var gismap = new ChangeMap(bgmap, geometry, options);\n            this.makeMap(gismap, options.defaultid);\n        }\n    }, {\n        key: \"makeChorochromaticMap\",\n        value: function makeChorochromaticMap(bgmap, geometry, options) {\n            if (this.profiling == true) this.startTimeStamp = Date.now();\n            var gismap = new ChorochromaticMap(bgmap, geometry, options);\n            this.makeMap(gismap, options.defaultid);\n        }\n    }, {\n        key: \"makeMap\",\n        value: function makeMap(gismap, options) {\n            var _this = this;\n\n            var defaultid = options.defaultid;\n            setTimeout(function (console) {\n                /*alert(this.profiling);*/\n                var start = 0;\n                if (_this.profiling == true) start = Date.now();\n                defaultid = defaultid != null ? defaultid : 1;\n                if (gismap.colorscheme == undefined) gismap.colorscheme = gismap.defaults(defaultid).colorScheme;\n                if (gismap.classbreaks == undefined) {\n                    if (gismap.numberofclasses == undefined) {\n                        gismap.numberofclasses = gismap.defaults(defaultid).numberOfClasses;\n                    }\n                    gismap.preProcessData(gismap.geometry, gismap.numberofclasses, gismap.algorithm, gismap.colorscheme);\n                }\n\n                //gismap.processData(gismap.geometry);\n                gismap.loadGeoJSON(gismap.geometry);\n                var start2 = 0;\n                if (_this.profiling == true) {\n                    start2 = Date.now();\n                    window.console.log(\"Tempo de processamento do dados (segundos): \" + (start2 - start) / 1000);\n                }\n                gismap.draw();\n\n                var end = 0;\n                if (_this.profiling == true) {\n                    end = Date.now();\n                    window.console.log(\"Tempo de desenho do mapa (segundos): \" + (end - start2) / 1000);\n                }\n                if (options.legend != false) gismap.buildLegend();\n                if (options.loader != false) {\n                    gismap.loader();\n                }\n                if (_this.profiling == true) {\n                    end = Date.now();\n                    window.console.log(\"Tempo total (segundos): \" + (end - _this.startTimeStamp) / 1000);\n                }\n            }, 1);\n        }\n    }, {\n        key: \"changemapDefaults\",\n        value: function changemapDefaults(defaultid) {\n            var options = {};\n            switch (defaultid) {\n                case 1:\n                    break;\n                default:\n                    break;\n            }\n            return options;\n        }\n    }]);\n\n    return Gisplay;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvRVM2VGVzdC9HaXNwbGF5LmpzPzI2Y2MiXSwic291cmNlc0NvbnRlbnQiOlsiLy9AVE9ETyBFc3RhcyB2YXJpYXZlaXMgYXRlIGEgY2xhc3NlIHNhbyBwYXJhIHJlbW92ZXJcclxuaW1wb3J0IHtDaG9yb3BsZXRofSBmcm9tICcuL01hcHMvQ2hvcm9wbGV0aCc7XHJcblxyXG4vKipcclxuICogR2lzcGxheSBBUEkgd2l0aCBvbmUgbWV0aG9kIGZvciBlYWNoIG1hcCBhdmFpbGFibGUuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgR2lzcGxheSB7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiR2lzcGxheSBDbGFzcyBjb25zdHJ1Y3RvclwiKTtcclxuICAgICAgICB3aW5kb3cucHJvZmlsaW5nID0gdHJ1ZTtcclxuICAgICAgICB3aW5kb3cubWFwcyA9IG5ldyBBcnJheSgpO1xyXG4gICAgICAgIHdpbmRvdy5tYXBjb3VudCA9IDA7XHJcblxyXG4gICAgICAgIC8vV2ViR0wgQVBJXHJcbiAgICAgICAgd2luZG93Ll92ZXJ0ZXhjb3VudCA9IDA7XHJcbiAgICAgICAgd2luZG93Ll90cmljb3VudCA9IDA7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgbWFrZUNob3JvcGxldGgoYmdtYXAsIGdlb21ldHJ5LCBvcHRpb25zKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvZmlsaW5nID09IHRydWUpXHJcbiAgICAgICAgICAgIHRoaXMuc3RhcnRUaW1lU3RhbXAgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgIC8qY29uc29sZS5sb2cob3B0aW9ucykqL1xyXG4gICAgICAgIGNvbnN0IGdpc21hcCA9IG5ldyBDaG9yb3BsZXRoKGJnbWFwLCBnZW9tZXRyeSwgb3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5tYWtlTWFwKGdpc21hcCwgb3B0aW9ucyk7Ly9vcHRpb25zLmRlZmF1bHRpZCk7XHJcbiAgICB9XHJcblxyXG4gICAgbWFrZURvdE1hcChiZ21hcCwgZ2VvbWV0cnksIG9wdGlvbnMpIHtcclxuICAgICAgICBpZiAodGhpcy5wcm9maWxpbmcgPT0gdHJ1ZSlcclxuICAgICAgICAgICAgdGhpcy5zdGFydFRpbWVTdGFtcCA9IERhdGUubm93KCk7XHJcbiAgICAgICAgY29uc3QgZ2lzbWFwID0gbmV3IERvdE1hcChiZ21hcCwgZ2VvbWV0cnksIG9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMubWFrZU1hcChnaXNtYXAsIG9wdGlvbnMuZGVmYXVsdGlkKTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgbWFrZVByb3BvcnRpb25hbFN5bWJvbHNNYXAoYmdtYXAsIGdlb21ldHJ5LCBvcHRpb25zKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvZmlsaW5nID09IHRydWUpXHJcbiAgICAgICAgICAgIHRoaXMuc3RhcnRUaW1lU3RhbXAgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgIGNvbnN0IGdpc21hcCA9IG5ldyBQU3ltYm9sc01hcChiZ21hcCwgZ2VvbWV0cnksIG9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMubWFrZU1hcChnaXNtYXApO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBtYWtlQ2hhbmdlTWFwKGJnbWFwLCBnZW9tZXRyeSwgb3B0aW9ucykge1xyXG4gICAgICAgIGlmICh0aGlzLnByb2ZpbGluZyA9PSB0cnVlKVxyXG4gICAgICAgICAgICB0aGlzLnN0YXJ0VGltZVN0YW1wID0gRGF0ZS5ub3coKTtcclxuICAgICAgICBjb25zdCBnaXNtYXAgPSBuZXcgQ2hhbmdlTWFwKGJnbWFwLCBnZW9tZXRyeSwgb3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5tYWtlTWFwKGdpc21hcCwgb3B0aW9ucy5kZWZhdWx0aWQpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBtYWtlQ2hvcm9jaHJvbWF0aWNNYXAoYmdtYXAsIGdlb21ldHJ5LCBvcHRpb25zKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvZmlsaW5nID09IHRydWUpXHJcbiAgICAgICAgICAgIHRoaXMuc3RhcnRUaW1lU3RhbXAgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgIGNvbnN0IGdpc21hcCA9IG5ldyBDaG9yb2Nocm9tYXRpY01hcChiZ21hcCwgZ2VvbWV0cnksIG9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMubWFrZU1hcChnaXNtYXAsIG9wdGlvbnMuZGVmYXVsdGlkKTtcclxuICAgIH1cclxuXHJcbiAgICBtYWtlTWFwKGdpc21hcCwgb3B0aW9ucykge1xyXG4gICAgICAgIGxldCAgZGVmYXVsdGlkID0gb3B0aW9ucy5kZWZhdWx0aWQ7XHJcbiAgICAgICAgc2V0VGltZW91dChjb25zb2xlID0+IHtcclxuICAgICAgICAgICAgLyphbGVydCh0aGlzLnByb2ZpbGluZyk7Ki9cclxuICAgICAgICAgICAgbGV0IHN0YXJ0ID0gMDtcclxuICAgICAgICAgICAgaWYgKHRoaXMucHJvZmlsaW5nID09IHRydWUpXHJcbiAgICAgICAgICAgICAgICBzdGFydCA9IERhdGUubm93KCk7XHJcbiAgICAgICAgICAgIGRlZmF1bHRpZCA9IGRlZmF1bHRpZCAhPSBudWxsID8gZGVmYXVsdGlkIDogMTtcclxuICAgICAgICAgICAgaWYgKGdpc21hcC5jb2xvcnNjaGVtZSA9PSB1bmRlZmluZWQpXHJcbiAgICAgICAgICAgICAgICBnaXNtYXAuY29sb3JzY2hlbWUgPSBnaXNtYXAuZGVmYXVsdHMoZGVmYXVsdGlkKS5jb2xvclNjaGVtZTtcclxuICAgICAgICAgICAgaWYgKGdpc21hcC5jbGFzc2JyZWFrcyA9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIGlmIChnaXNtYXAubnVtYmVyb2ZjbGFzc2VzID09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGdpc21hcC5udW1iZXJvZmNsYXNzZXMgPSBnaXNtYXAuZGVmYXVsdHMoZGVmYXVsdGlkKS5udW1iZXJPZkNsYXNzZXM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBnaXNtYXAucHJlUHJvY2Vzc0RhdGEoZ2lzbWFwLmdlb21ldHJ5LCBnaXNtYXAubnVtYmVyb2ZjbGFzc2VzLCBnaXNtYXAuYWxnb3JpdGhtLCBnaXNtYXAuY29sb3JzY2hlbWUpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvL2dpc21hcC5wcm9jZXNzRGF0YShnaXNtYXAuZ2VvbWV0cnkpO1xyXG4gICAgICAgICAgICBnaXNtYXAubG9hZEdlb0pTT04oZ2lzbWFwLmdlb21ldHJ5KTtcclxuICAgICAgICAgICAgbGV0IHN0YXJ0MiA9IDA7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnByb2ZpbGluZyA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICBzdGFydDIgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKGBUZW1wbyBkZSBwcm9jZXNzYW1lbnRvIGRvIGRhZG9zIChzZWd1bmRvcyk6ICR7KHN0YXJ0MiAtIHN0YXJ0KSAvIDEwMDB9YCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZ2lzbWFwLmRyYXcoKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBlbmQgPSAwO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5wcm9maWxpbmcgPT0gdHJ1ZSkge1xyXG4gICAgICAgICAgICAgICAgZW5kID0gRGF0ZS5ub3coKTtcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhgVGVtcG8gZGUgZGVzZW5obyBkbyBtYXBhIChzZWd1bmRvcyk6ICR7KGVuZCAtIHN0YXJ0MikgLyAxMDAwfWApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChvcHRpb25zLmxlZ2VuZCAhPSBmYWxzZSlcclxuICAgICAgICAgICAgICAgIGdpc21hcC5idWlsZExlZ2VuZCgpO1xyXG4gICAgICAgICAgICBpZiAob3B0aW9ucy5sb2FkZXIgIT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgICAgIGdpc21hcC5sb2FkZXIoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodGhpcy5wcm9maWxpbmcgPT0gdHJ1ZSkge1xyXG4gICAgICAgICAgICAgICAgZW5kID0gRGF0ZS5ub3coKTtcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhgVGVtcG8gdG90YWwgKHNlZ3VuZG9zKTogJHsoZW5kIC0gdGhpcy5zdGFydFRpbWVTdGFtcCkgLyAxMDAwfWApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgY2hhbmdlbWFwRGVmYXVsdHMoZGVmYXVsdGlkKSB7XHJcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHt9O1xyXG4gICAgICAgIHN3aXRjaCAoZGVmYXVsdGlkKSB7XHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBvcHRpb25zO1xyXG4gICAgfVxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9FUzZUZXN0L0dpc3BsYXkuanMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFEQTtBQUNBOzs7QUFDQTs7O0FBR0E7QUFFQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7OztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7OztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7OztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7OztBQUVBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQUNBOzs7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 1 */
/* unknown exports provided */
/* all exports used */
/*!**********************************!*\
  !*** ./src/ES6Test/Aesthetic.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Aesthetic = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Feature = __webpack_require__(/*! ./Feature */ 2);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Aesthetic = exports.Aesthetic = function () {\n    function Aesthetic(id, attr, fcolor, stroke, pointsize, range) {\n        _classCallCheck(this, Aesthetic);\n\n        this.id = id;\n        this.fillColor = fcolor;\n        this.strokeColor = stroke;\n        this.range = range;\n        this._attr = attr;\n        this.pointSize = pointsize == null ? 1.0 : parseFloat(pointsize);\n        this._features = new Array();\n        this._allFeatures = null;\n        this.enabled = true;\n        this.outer = false;\n        return this;\n    }\n\n    _createClass(Aesthetic, [{\n        key: 'addFeature',\n        value: function addFeature(id, properties, triangles, borders, points) {\n            this._features.push(new _Feature.Feature(id, properties, triangles, borders, points));\n        }\n    }, {\n        key: 'getAttr',\n        value: function getAttr() {\n            return this._attr;\n        }\n    }, {\n        key: 'checkProperty',\n        value: function checkProperty(value) {\n            if (this.range == null) return true;else {\n                if (typeof value === 'number') {\n\n                    return (this.range[0] == null || value >= this.range[0]) && (this.range[1] == null || value < this.range[1] || value <= this.range[1] && this.outer == true);\n                } else return value == this.range[0];\n            }\n        }\n    }, {\n        key: 'addGroupedFeature',\n        value: function addGroupedFeature(id, triangles, borders, points) {\n            if (this._allFeatures == null) {\n                this._allFeatures = new Array();\n                this._allFeatures.push(new _Feature.Feature(id, null, triangles, borders, points));\n            } else {\n                var cursor = 0; //TODO\n                //this._allFeatures[0]._properties.push(properties);\n                this._allFeatures[cursor].push(new _Feature.Feature(id, null, triangles, borders, points));\n                //this._allFeatures[cursor]._triangles.concat(triangles);\n                //this._allFeatures[cursor]._borders.concat(borders);\n            }\n        }\n    }, {\n        key: 'enableDisable',\n        value: function enableDisable() {\n            this.enabled = !this.enabled;\n            return this.enabled;\n        }\n    }]);\n\n    return Aesthetic;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvRVM2VGVzdC9BZXN0aGV0aWMuanM/ZDRhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0ZlYXR1cmV9IGZyb20gJy4vRmVhdHVyZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgQWVzdGhldGljIHtcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IoaWQsIGF0dHIsIGZjb2xvciwgc3Ryb2tlLCBwb2ludHNpemUsIHJhbmdlKSB7XHJcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xyXG4gICAgICAgIHRoaXMuZmlsbENvbG9yID0gZmNvbG9yO1xyXG4gICAgICAgIHRoaXMuc3Ryb2tlQ29sb3IgPSBzdHJva2U7XHJcbiAgICAgICAgdGhpcy5yYW5nZSA9IHJhbmdlO1xyXG4gICAgICAgIHRoaXMuX2F0dHIgPSBhdHRyO1xyXG4gICAgICAgIHRoaXMucG9pbnRTaXplID0gcG9pbnRzaXplID09IG51bGwgPyAxLjAgOiBwYXJzZUZsb2F0KHBvaW50c2l6ZSk7XHJcbiAgICAgICAgdGhpcy5fZmVhdHVyZXMgPSBuZXcgQXJyYXkoKTtcclxuICAgICAgICB0aGlzLl9hbGxGZWF0dXJlcyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5lbmFibGVkID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLm91dGVyID0gZmFsc2U7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkRmVhdHVyZShpZCwgcHJvcGVydGllcywgdHJpYW5nbGVzLCBib3JkZXJzLCBwb2ludHMpIHtcclxuICAgICAgICB0aGlzLl9mZWF0dXJlcy5wdXNoKG5ldyBGZWF0dXJlKGlkLCBwcm9wZXJ0aWVzLCB0cmlhbmdsZXMsIGJvcmRlcnMsIHBvaW50cykpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEF0dHIoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2F0dHI7XHJcbiAgICB9XHJcblxyXG4gICAgY2hlY2tQcm9wZXJ0eSh2YWx1ZSkge1xyXG4gICAgICAgIGlmICh0aGlzLnJhbmdlID09IG51bGwpXHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykge1xyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybiAoKHRoaXMucmFuZ2VbMF0gPT0gbnVsbCB8fCB2YWx1ZSA+PSB0aGlzLnJhbmdlWzBdKVxyXG4gICAgICAgICAgICAgICAgICAgICYmICh0aGlzLnJhbmdlWzFdID09IG51bGwgfHxcclxuICAgICAgICAgICAgICAgICAgICAgICAgKHZhbHVlIDwgdGhpcy5yYW5nZVsxXSB8fCAodmFsdWUgPD0gdGhpcy5yYW5nZVsxXSAmJiB0aGlzLm91dGVyID09IHRydWUpKSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHJldHVybiAodmFsdWUgPT0gdGhpcy5yYW5nZVswXSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFkZEdyb3VwZWRGZWF0dXJlKGlkLCB0cmlhbmdsZXMsIGJvcmRlcnMsIHBvaW50cykge1xyXG4gICAgICAgIGlmICh0aGlzLl9hbGxGZWF0dXJlcyA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2FsbEZlYXR1cmVzID0gbmV3IEFycmF5KCk7XHJcbiAgICAgICAgICAgIHRoaXMuX2FsbEZlYXR1cmVzLnB1c2gobmV3IEZlYXR1cmUoaWQsIG51bGwsIHRyaWFuZ2xlcywgYm9yZGVycywgcG9pbnRzKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCBjdXJzb3IgPSAwOyAvL1RPRE9cclxuICAgICAgICAgICAgLy90aGlzLl9hbGxGZWF0dXJlc1swXS5fcHJvcGVydGllcy5wdXNoKHByb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICB0aGlzLl9hbGxGZWF0dXJlc1tjdXJzb3JdLnB1c2gobmV3IEZlYXR1cmUoaWQsIG51bGwsIHRyaWFuZ2xlcywgYm9yZGVycywgcG9pbnRzKSk7XHJcbiAgICAgICAgICAgIC8vdGhpcy5fYWxsRmVhdHVyZXNbY3Vyc29yXS5fdHJpYW5nbGVzLmNvbmNhdCh0cmlhbmdsZXMpO1xyXG4gICAgICAgICAgICAvL3RoaXMuX2FsbEZlYXR1cmVzW2N1cnNvcl0uX2JvcmRlcnMuY29uY2F0KGJvcmRlcnMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBlbmFibGVEaXNhYmxlKCkge1xyXG4gICAgICAgIHRoaXMuZW5hYmxlZCA9ICF0aGlzLmVuYWJsZWQ7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZW5hYmxlZDtcclxuICAgIH1cclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvRVM2VGVzdC9BZXN0aGV0aWMuanMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7OztBQUNBO0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTs7O0FBRUE7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBR0E7QUFHQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 2 */
/* unknown exports provided */
/* all exports used */
/*!********************************!*\
  !*** ./src/ES6Test/Feature.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//Intermediate API\n/**\r\n * \r\n */\nvar Feature = exports.Feature = function Feature(id, properties, triangles, borders, points) {\n    _classCallCheck(this, Feature);\n\n    this._id = id;\n    this._properties = properties;\n    this._triangles = triangles;\n    this._borders = borders;\n    this._points = points;\n    return this;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvRVM2VGVzdC9GZWF0dXJlLmpzP2JjOWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy9JbnRlcm1lZGlhdGUgQVBJXHJcbi8qKlxyXG4gKiBcclxuICovXHJcbmV4cG9ydCBjbGFzcyBGZWF0dXJlIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihpZCwgcHJvcGVydGllcywgdHJpYW5nbGVzLCBib3JkZXJzLCBwb2ludHMpIHtcclxuICAgICAgICB0aGlzLl9pZCA9IGlkO1xyXG4gICAgICAgIHRoaXMuX3Byb3BlcnRpZXMgPSBwcm9wZXJ0aWVzO1xyXG4gICAgICAgIHRoaXMuX3RyaWFuZ2xlcyA9IHRyaWFuZ2xlcztcclxuICAgICAgICB0aGlzLl9ib3JkZXJzID0gYm9yZGVycztcclxuICAgICAgICB0aGlzLl9wb2ludHMgPSBwb2ludHM7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuXHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvRVM2VGVzdC9GZWF0dXJlLmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7OztBQUdBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 3 */
/* unknown exports provided */
/* all exports used */
/*!*******************************!*\
  !*** ./src/ES6Test/Legend.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Legend = exports.Legend = function () {\n    function Legend(id, title) {\n        _classCallCheck(this, Legend);\n\n        this.title = title;\n        this.init(id);\n        return this;\n    }\n\n    _createClass(Legend, [{\n        key: 'insertLegend',\n        value: function insertLegend(map) {\n            this.legendDiv.appendChild(this.table);\n            map.getContainer().appendChild(this.legendDiv);\n        }\n    }, {\n        key: 'insertPointRow',\n        value: function insertPointRow(currentaes, mapobj) {\n            this.insertRow(currentaes, mapobj, 2);\n        }\n    }, {\n        key: 'insertPolygonRow',\n        value: function insertPolygonRow(currentaes, mapobj) {\n            this.insertRow(currentaes, mapobj, 1);\n        }\n    }, {\n        key: 'insertRow',\n        value: function insertRow(currentaes, mapobj, type) {\n\n            var row = document.createElement('tr');\n            var value = document.createElement('td');\n            var color = document.createElement('td');\n            var text = void 0;\n            if (typeof currentaes.range[0] === 'number') {\n                var mininput = currentaes.range[0] != null ? currentaes.range[0] : mapobj.min;\n                var maxinput = currentaes.range[1] != null ? currentaes.range[1] : mapobj.max;\n                if (currentaes.outer == false) text = document.createTextNode('[' + mininput + ', ' + maxinput + '[');else text = document.createTextNode('[' + mininput + ', ' + maxinput + ']');\n            } else text = document.createTextNode(currentaes.range[0]);\n            value.appendChild(text);\n\n            var colorDiv = document.createElement('div');\n            colorDiv.style.position = 'relative';\n            var rgbc = 'rgba(' + currentaes.fillColor[0] + ',' + currentaes.fillColor[1] + ',' + currentaes.fillColor[2] + ',' + currentaes.fillColor[3] + ')';\n            colorDiv.style['backgroundColor'] = rgbc;\n            if (type == 1) {\n                //polygon\n                colorDiv.style.height = 25; //(mapCanvas.height / 10);\n                colorDiv.style.width = 80; //(mapCanvas.width / 10);\n                if (currentaes.strokeColor != null && currentaes != undefined) colorDiv.style['borderColor'] = 'rgba(' + currentaes.strokeColor[0] + ',' + currentaes.strokeColor[1] + ',' + currentaes.strokeColor[2] + ',' + currentaes.strokeColor[3] + ')';\n                colorDiv.className = '_gisplayrectangle';\n            } else if (type == 2) {\n                //point\n                var size = void 0;\n                if (currentaes.pointSize != null) {\n                    size = Math.max(currentaes.pointSize, 5);\n                } else size = 25;\n                colorDiv.style.height = size;\n                colorDiv.style.width = size;\n                colorDiv.className = '_gisplaycircle';\n            }\n\n            color.appendChild(colorDiv);\n\n            row.appendChild(color);\n            row.appendChild(value);\n\n            row.onclick = function () {\n                if (Gisplay.profiling == true) var start = Date.now();\n                if (mapobj.legendToggle != false) {\n                    var toFade = !currentaes.enableDisable();\n                    if (toFade == true) {\n                        this.className += \" _gisplayfade\";\n                    } else {\n                        this.className = this.className.replace(/(?:^|\\s)_gisplayfade(?!\\S)/g, '');\n                    }\n                }\n                if (mapobj.legendOnClickCall != null && mapobj.legendOnClickCall != undefined) mapobj.legendOnClickCall(currentaes);\n                mapobj.draw();\n                if (Gisplay.profiling == true) {\n                    var end = Date.now();\n                    window.console.log('Tempo de processamento de filtragem pela legenda (segundos): ' + (end - start) / 1000);\n                }\n            };\n\n            this.table.appendChild(row);\n        }\n    }, {\n        key: 'insertGradient',\n        value: function insertGradient(mapobj, left, middle, right) {\n            var row = document.createElement('tr');\n            var value = document.createElement('td');\n            var valueDiv = document.createElement('div');\n            value.colSpan = 2;\n            value.style.textAlign = 'center';\n            var numberof = 5;\n            if (mapobj.aesthetics.length > 5) numberof = mapobj.aesthetics.length;\n            var strcolor = '';\n            for (var i = 0; i < numberof; i++) {\n                var color = mapobj.fcolor(i / numberof).rgb();\n                strcolor += ',rgba(' + Math.round(color[0]) + ',' + Math.round(color[1]) + ',' + Math.round(color[2]) + ',' + mapobj.alpha + ')';\n            }\n            strcolor += ') ';\n            valueDiv.style.background = '-webkit-linear-gradient(left' + strcolor;\n\n            valueDiv.style.height = 25; //(mapCanvas.height / 10);\n            valueDiv.style.width = 130; //(mapCanvas.width / 10);\n\n            var row2 = document.createElement('tr');\n            var value2 = document.createElement('td');\n            value2.colSpan = 2;\n\n            var divleft = document.createElement('div');\n            divleft.style.textAlign = 'left';\n            divleft.style.width = '33%';\n            divleft.style.display = \"inline-block\";\n            var lefttext = document.createTextNode(left);\n            var divmid = document.createElement('div');\n            divmid.style.textAlign = 'center';\n            divmid.style.width = '33%';\n            divmid.style.display = \"inline-block\";\n            var text = document.createTextNode(middle);\n            var divright = document.createElement('div');\n            divright.style.textAlign = 'right';\n            divright.style.width = '33%';\n            divright.style.display = \"inline-block\";\n            var righttext = document.createTextNode(right);\n\n            divleft.appendChild(lefttext);\n            divmid.appendChild(text);\n            divright.appendChild(righttext);\n            value2.appendChild(divleft);\n            value2.appendChild(divmid);\n            value2.appendChild(divright);\n            value.appendChild(valueDiv);\n            row2.appendChild(value2);\n            row.appendChild(value);\n            this.table.appendChild(row);\n            this.table.appendChild(row2);\n        }\n    }, {\n        key: 'init',\n        value: function init(id, classname) {\n            //console.log(\"id == \" + id);\n            var mapCanvas = document.getElementById('mapCanvas' + id);\n            this.legendDiv = document.createElement('div');\n            if (classname != undefined && classname != null) {\n                this.legendDiv.className = classname;\n            } else {\n                this.legendDiv.className = '_gisplaylegendBR';\n            }\n            this.legendDiv.id = 'legendDiv' + id;\n\n            this.table = document.createElement('table');\n            this.table.style.zIndex = \"2000\";\n            var thvalue = document.createElement('th');\n            var thcolor = document.createElement('th');\n            thcolor.style.align = \"center\";\n            //thcolor.style.width = 100;\n            this.table.appendChild(thcolor);\n            this.table.appendChild(thvalue);\n            var titlerow = document.createElement('tr');\n            var titletd = document.createElement('td');\n            titletd.colSpan = 2;\n            titletd.style.textAlign = 'center';\n            titletd.style.width = 100;\n            var titletext = document.createTextNode(this.title);\n            titletd.appendChild(titletext);\n            titlerow.appendChild(titletd);\n            this.table.appendChild(titlerow);\n        }\n    }, {\n        key: 'insertProportionalSymbols',\n        value: function insertProportionalSymbols(currentaes, mapobj, numberof) {\n            if (this.lastdiv == undefined) {\n                var row = document.createElement('tr');\n                var value = document.createElement('td');\n                value.colSpan = 2;\n                value.style.textAlign = 'center';\n                this.firstInsertion = true;\n            } else {\n                this.firstInsertion = false;\n            }\n\n            var rgbc = 'rgba(' + currentaes.fillColor[0] + ',' + currentaes.fillColor[1] + ',' + currentaes.fillColor[2] + ',' + 1 + ')';\n            var strokecolor = void 0;\n\n            if (currentaes.strokeColor != null && currentaes != undefined) strokecolor = 'rgba(' + currentaes.strokeColor[0] + ',' + currentaes.strokeColor[1] + ',' + currentaes.strokeColor[2] + ',' + currentaes.strokeColor[3] + ')';else strokecolor = 'rgba(' + 0 + ',' + 0 + ',' + 0 + ',' + 1 + ')';\n\n            for (var i = numberof - 1; i >= 0; i--) {\n                var current = document.createElement('div');\n                var propvalue = void 0;\n                if (this.firstInsertion == false && i == numberof - 1 || numberof == 1) propvalue = currentaes.range[1];else propvalue = mapobj.min + i / (numberof - 1) * (mapobj.max - mapobj.min);\n\n                var text = document.createTextNode(round(propvalue));\n                current.appendChild(text);\n                var colorDiv = document.createElement('div');\n                colorDiv.style.position = 'relative';\n                colorDiv.style.backgroundColor = rgbc;\n                colorDiv.className = '_gisplayproportionalcircle';\n                colorDiv.style.borderColor = strokecolor;\n                var temppointsize = (mapobj.maxpointsize - mapobj.minpointsize) / (mapobj.max - mapobj.min) * (propvalue - mapobj.min);\n                var size = Math.max(temppointsize, 7.5);\n                colorDiv.style.height = size;\n                colorDiv.style.width = size;\n                colorDiv.style.inherit = false;\n\n                colorDiv.onclick = function (e) {\n                    if (Gisplay.profiling == true) var start = Date.now();\n                    if (mapobj.legendToggle != false) {\n                        var toFade = !currentaes.enableDisable();\n                        if (toFade == true) {\n                            this.className += \" _gisplayfade\";\n                        } else {\n                            this.className = this.className.replace(/(?:^|\\s)_gisplayfade(?!\\S)/g, '');\n                        }\n                    }\n                    if (mapobj.legendOnClickCall != null && mapobj.legendOnClickCall != undefined) mapobj.legendOnClickCall(currentaes);\n                    mapobj.draw();\n                    if (Gisplay.profiling == true) {\n                        var end = Date.now();\n                        window.console.log('Tempo de processamento de filtragem pela legenda (segundos): ' + (end - start) / 1000);\n                    }\n                    if (!e) var e = window.event;\n                    e.cancelBubble = true;\n                    if (e.stopPropagation) e.stopPropagation();\n                };\n                current.appendChild(colorDiv);\n                if ( /*i!= (numberof-1) &&*/this.lastdiv != undefined) {\n                    this.lastdiv.appendChild(current);\n                    this.lastdiv = colorDiv;\n                } else {\n                    value.appendChild(current);\n                    this.lastdiv = colorDiv;\n                }\n            }\n            if (this.firstInsertion == true) {\n                row.appendChild(value);\n                this.table.appendChild(row);\n            }\n        }\n    }]);\n\n    return Legend;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 4 */
/* unknown exports provided */
/* all exports used */
/*!******************************************!*\
  !*** ./src/ES6Test/Maps/BGMapWrapper.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BGMapWrapper = exports.BGMapWrapper = function () {\n    function BGMapWrapper(map) {\n        _classCallCheck(this, BGMapWrapper);\n\n        console.log(\"BGMapWrapper constructor?\");\n        this.map = map;\n        return this;\n    }\n\n    _createClass(BGMapWrapper, [{\n        key: 'getContainer',\n        value: function getContainer() {\n            return this.map.getContainer();\n        }\n    }, {\n        key: 'createCanvas',\n        value: function createCanvas(id) {\n            var mapCanvas = document.createElement('canvas');\n            mapCanvas.id = 'mapCanvas' + id;\n            mapCanvas.style.position = 'absolute';\n\n            var mapDiv = this.map.getContainer();\n            mapCanvas.height = mapDiv.offsetHeight;\n            mapCanvas.width = mapDiv.offsetWidth;\n            //mapCanvas.style.zIndex = \"2\";\n\n            //case mapbox\n            mapDiv.insertBefore(mapCanvas, mapDiv.firstChild.nextSibling);\n\n            var canvas = document.getElementById('mapCanvas' + id);\n            return canvas;\n        }\n    }, {\n        key: 'getZoom',\n        value: function getZoom() {\n            return this.map.getZoom();\n        }\n    }, {\n        key: 'getLngBound',\n        value: function getLngBound() {\n            return this.map.getBounds().getNorthWest().lng;\n        }\n    }, {\n        key: 'getLatBound',\n        value: function getLatBound() {\n            return this.map.getBounds().getNorthWest().lat;\n        }\n    }, {\n        key: 'onEvent',\n        value: function onEvent(eventstr, eventfunction) {\n            this.map.on(eventstr, eventfunction);\n        }\n    }, {\n        key: 'loader',\n        value: function loader() {\n            if (this.loaderDiv === undefined) this.createLoader(this.map);else {\n                if (this.loaderDiv.style.display == 'none') this.loaderDiv.style.display = 'flex';else {\n                    this.loaderDiv.style.display = 'none';\n                }\n\n                if (this.loaderDiv.className.includes('_gisplayhidden')) {\n                    this.loaderDiv.className = this.loaderDiv.className.replace(/(?:^|\\s)_gisplayhidden(?!\\S)/g, '_gisplayLoaderOuterDiv');\n                } else {\n                    this.loaderDiv.className = this.loaderDiv.className.replace(/(?:^|\\s)_gisplayLoaderOuterDiv(?!\\S)/g, '_gisplayhidden');\n                }\n            }\n        }\n    }, {\n        key: 'createLoader',\n        value: function createLoader() {\n            var outerDiv = document.createElement('div');\n            var innerDiv = document.createElement('div');\n            innerDiv.className = '_gisplayloader';\n\n            var mapDiv = this.getContainer();\n\n            /*outerDiv.style = ' opacity: 0.5; background-color: grey; justify-content: center; display: flex;';\r\n            outerDiv.style.position = 'absolute';\r\n            outerDiv.style.zIndex = '999999999';*/\n            outerDiv.className = '_gisplayLoaderOuterDiv';\n            outerDiv.style.height = mapDiv.offsetHeight;\n            outerDiv.style.width = mapDiv.offsetWidth;\n            outerDiv.appendChild(innerDiv);\n            this.loaderDiv = outerDiv;\n\n            mapDiv.parentElement.insertBefore(outerDiv, mapDiv);\n        }\n    }]);\n\n    return BGMapWrapper;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvRVM2VGVzdC9NYXBzL0JHTWFwV3JhcHBlci5qcz9hZjNhIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG5leHBvcnQgY2xhc3MgQkdNYXBXcmFwcGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKG1hcCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiQkdNYXBXcmFwcGVyIGNvbnN0cnVjdG9yP1wiKTtcclxuICAgICAgICB0aGlzLm1hcCA9IG1hcDtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICBnZXRDb250YWluZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubWFwLmdldENvbnRhaW5lcigpO1xyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZUNhbnZhcyhpZCkge1xyXG4gICAgICAgIGNvbnN0IG1hcENhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xyXG4gICAgICAgIG1hcENhbnZhcy5pZCA9IGBtYXBDYW52YXMke2lkfWA7XHJcbiAgICAgICAgbWFwQ2FudmFzLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuXHJcbiAgICAgICAgY29uc3QgbWFwRGl2ID0gdGhpcy5tYXAuZ2V0Q29udGFpbmVyKCk7XHJcbiAgICAgICAgbWFwQ2FudmFzLmhlaWdodCA9IG1hcERpdi5vZmZzZXRIZWlnaHQ7XHJcbiAgICAgICAgbWFwQ2FudmFzLndpZHRoID0gbWFwRGl2Lm9mZnNldFdpZHRoO1xyXG4gICAgICAgIC8vbWFwQ2FudmFzLnN0eWxlLnpJbmRleCA9IFwiMlwiO1xyXG5cclxuICAgICAgICAvL2Nhc2UgbWFwYm94XHJcbiAgICAgICAgbWFwRGl2Lmluc2VydEJlZm9yZShtYXBDYW52YXMsIG1hcERpdi5maXJzdENoaWxkLm5leHRTaWJsaW5nKTtcclxuXHJcbiAgICAgICAgY29uc3QgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYG1hcENhbnZhcyR7aWR9YCk7XHJcbiAgICAgICAgcmV0dXJuIGNhbnZhcztcclxuICAgIH1cclxuXHJcbiAgICBnZXRab29tKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1hcC5nZXRab29tKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0TG5nQm91bmQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubWFwLmdldEJvdW5kcygpLmdldE5vcnRoV2VzdCgpLmxuZztcclxuICAgIH1cclxuXHJcbiAgICBnZXRMYXRCb3VuZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tYXAuZ2V0Qm91bmRzKCkuZ2V0Tm9ydGhXZXN0KCkubGF0O1xyXG4gICAgfVxyXG5cclxuICAgIG9uRXZlbnQoZXZlbnRzdHIsIGV2ZW50ZnVuY3Rpb24pIHtcclxuICAgICAgICB0aGlzLm1hcC5vbihldmVudHN0ciwgZXZlbnRmdW5jdGlvbik7XHJcbiAgICB9XHJcblxyXG4gICAgbG9hZGVyKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmxvYWRlckRpdiA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICB0aGlzLmNyZWF0ZUxvYWRlcih0aGlzLm1hcCk7XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmxvYWRlckRpdi5zdHlsZS5kaXNwbGF5ID09ICdub25lJylcclxuICAgICAgICAgICAgICAgIHRoaXMubG9hZGVyRGl2LnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkZXJEaXYuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMubG9hZGVyRGl2LmNsYXNzTmFtZS5pbmNsdWRlcygnX2dpc3BsYXloaWRkZW4nKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkZXJEaXYuY2xhc3NOYW1lID0gdGhpcy5sb2FkZXJEaXYuY2xhc3NOYW1lLnJlcGxhY2UoLyg/Ol58XFxzKV9naXNwbGF5aGlkZGVuKD8hXFxTKS9nLCAnX2dpc3BsYXlMb2FkZXJPdXRlckRpdicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkZXJEaXYuY2xhc3NOYW1lID0gdGhpcy5sb2FkZXJEaXYuY2xhc3NOYW1lLnJlcGxhY2UoLyg/Ol58XFxzKV9naXNwbGF5TG9hZGVyT3V0ZXJEaXYoPyFcXFMpL2csICdfZ2lzcGxheWhpZGRlbicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZUxvYWRlcigpIHtcclxuICAgICAgICBjb25zdCBvdXRlckRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIGNvbnN0IGlubmVyRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgaW5uZXJEaXYuY2xhc3NOYW1lID0gJ19naXNwbGF5bG9hZGVyJztcclxuXHJcbiAgICAgICAgY29uc3QgbWFwRGl2ID0gdGhpcy5nZXRDb250YWluZXIoKTtcclxuXHJcbiAgICAgICAgLypvdXRlckRpdi5zdHlsZSA9ICcgb3BhY2l0eTogMC41OyBiYWNrZ3JvdW5kLWNvbG9yOiBncmV5OyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgZGlzcGxheTogZmxleDsnO1xyXG4gICAgICAgIG91dGVyRGl2LnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuICAgICAgICBvdXRlckRpdi5zdHlsZS56SW5kZXggPSAnOTk5OTk5OTk5JzsqL1xyXG4gICAgICAgIG91dGVyRGl2LmNsYXNzTmFtZSA9ICdfZ2lzcGxheUxvYWRlck91dGVyRGl2JztcclxuICAgICAgICBvdXRlckRpdi5zdHlsZS5oZWlnaHQgPSBtYXBEaXYub2Zmc2V0SGVpZ2h0O1xyXG4gICAgICAgIG91dGVyRGl2LnN0eWxlLndpZHRoID0gbWFwRGl2Lm9mZnNldFdpZHRoO1xyXG4gICAgICAgIG91dGVyRGl2LmFwcGVuZENoaWxkKGlubmVyRGl2KTtcclxuICAgICAgICB0aGlzLmxvYWRlckRpdiA9IG91dGVyRGl2O1xyXG5cclxuICAgICAgICBtYXBEaXYucGFyZW50RWxlbWVudC5pbnNlcnRCZWZvcmUob3V0ZXJEaXYsIG1hcERpdik7XHJcbiAgICB9XHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9FUzZUZXN0L01hcHMvQkdNYXBXcmFwcGVyLmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTs7O0FBRUE7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFHQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 5 */
/* unknown exports provided */
/* all exports used */
/*!****************************************!*\
  !*** ./src/ES6Test/Maps/Choropleth.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Choropleth = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Map2 = __webpack_require__(/*! ./Map */ 6);\n\nvar _Legend = __webpack_require__(/*! ../Legend */ 3);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * Choropleth implementation 06/03\r\n */\nvar Choropleth = exports.Choropleth = function (_Map) {\n    _inherits(Choropleth, _Map);\n\n    function Choropleth(bgmap, geometry, options) {\n        _classCallCheck(this, Choropleth);\n\n        var _this = _possibleConstructorReturn(this, (Choropleth.__proto__ || Object.getPrototypeOf(Choropleth)).call(this, bgmap, geometry, options));\n\n        _this.aesthetics = new Array();\n        _this.geometry = geometry;\n        _this.loadOptions(options, bgmap);\n        _this.id = 0; //mapcount++;\n        _this.type = 'CP';\n        maps.push(_this);\n        _this.initialize();\n        /*return this;*/\n        return _this;\n    }\n\n    _createClass(Choropleth, [{\n        key: 'draw',\n        value: function draw() {\n            //console.log(\"Choropleth drawaaa() called\");\n            this.clear();\n            for (var i = 0; i < this.aesthetics.length; i++) {\n                if (this.aesthetics[i].enabled == true) {\n                    this.drawTriangles(this.aesthetics[i]);\n                }\n                this.drawBorders(this.aesthetics[i]);\n            }\n        }\n    }, {\n        key: 'buildLegend',\n        value: function buildLegend() {\n            //console.log(\"Choropleth buildLegend() called\");\n            this.legend = new _Legend.Legend(this.id, this.legendTitle);\n            for (var a in this.aesthetics) {\n                this.legend.insertPolygonRow(this.aesthetics[a], this);\n            }\n            this.legend.insertLegend(this.map);\n        }\n    }, {\n        key: 'defaults',\n        value: function defaults(defaultid) {\n            //console.log(\"Choropleth defaults() called\");\n            var options = {};\n            switch (defaultid) {\n                case 1:\n                    options.colorScheme = ['white', 'yellow', 'orange', 'red'];\n                    options.numberOfClasses = 4;\n                    break;\n                default:\n                    break;\n            }\n            return options;\n        }\n    }]);\n\n    return Choropleth;\n}(_Map2.Map);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvRVM2VGVzdC9NYXBzL0Nob3JvcGxldGguanM/MGRmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01hcH0gZnJvbSAnLi9NYXAnO1xyXG5pbXBvcnQge0xlZ2VuZH0gZnJvbSAnLi4vTGVnZW5kJztcclxuXHJcbi8qKlxyXG4gKiBDaG9yb3BsZXRoIGltcGxlbWVudGF0aW9uIDA2LzAzXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQ2hvcm9wbGV0aCBleHRlbmRzIE1hcCB7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKGJnbWFwLCBnZW9tZXRyeSwgb3B0aW9ucykge1xyXG4gICAgICAgIHN1cGVyKGJnbWFwLCBnZW9tZXRyeSwgb3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5hZXN0aGV0aWNzID0gbmV3IEFycmF5KCk7XHJcbiAgICAgICAgdGhpcy5nZW9tZXRyeSA9IGdlb21ldHJ5O1xyXG4gICAgICAgIHRoaXMubG9hZE9wdGlvbnMob3B0aW9ucywgYmdtYXApO1xyXG4gICAgICAgIHRoaXMuaWQgPSAwOy8vbWFwY291bnQrKztcclxuICAgICAgICB0aGlzLnR5cGUgPSAnQ1AnO1xyXG4gICAgICAgIG1hcHMucHVzaCh0aGlzKTtcclxuICAgICAgICB0aGlzLmluaXRpYWxpemUoKTtcclxuICAgICAgICAvKnJldHVybiB0aGlzOyovXHJcbiAgICB9XHJcblxyXG4gICAgZHJhdygpIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKFwiQ2hvcm9wbGV0aCBkcmF3YWFhKCkgY2FsbGVkXCIpO1xyXG4gICAgICAgIHRoaXMuY2xlYXIoKTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYWVzdGhldGljcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5hZXN0aGV0aWNzW2ldLmVuYWJsZWQgPT0gdHJ1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kcmF3VHJpYW5nbGVzKHRoaXMuYWVzdGhldGljc1tpXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5kcmF3Qm9yZGVycyh0aGlzLmFlc3RoZXRpY3NbaV0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBidWlsZExlZ2VuZCgpIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKFwiQ2hvcm9wbGV0aCBidWlsZExlZ2VuZCgpIGNhbGxlZFwiKTtcclxuICAgICAgICB0aGlzLmxlZ2VuZCA9IG5ldyBMZWdlbmQodGhpcy5pZCwgdGhpcy5sZWdlbmRUaXRsZSk7XHJcbiAgICAgICAgZm9yIChjb25zdCBhIGluIHRoaXMuYWVzdGhldGljcykge1xyXG4gICAgICAgICAgICB0aGlzLmxlZ2VuZC5pbnNlcnRQb2x5Z29uUm93KHRoaXMuYWVzdGhldGljc1thXSwgdGhpcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubGVnZW5kLmluc2VydExlZ2VuZCh0aGlzLm1hcCk7XHJcbiAgICB9XHJcblxyXG4gICAgZGVmYXVsdHMoZGVmYXVsdGlkKSB7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcIkNob3JvcGxldGggZGVmYXVsdHMoKSBjYWxsZWRcIik7XHJcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHt9O1xyXG4gICAgICAgIHN3aXRjaCAoZGVmYXVsdGlkKSB7XHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgIG9wdGlvbnMuY29sb3JTY2hlbWUgPSBbJ3doaXRlJywgJ3llbGxvdycsICdvcmFuZ2UnLCAncmVkJ107XHJcbiAgICAgICAgICAgICAgICBvcHRpb25zLm51bWJlck9mQ2xhc3NlcyA9IDQ7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gb3B0aW9ucztcclxuICAgIH1cclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvRVM2VGVzdC9NYXBzL0Nob3JvcGxldGguanMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFBQTtBQUNBOzs7Ozs7O0FBQ0E7OztBQUdBOzs7QUFFQTtBQUFBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBVUE7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFRQTtBQUNBOzs7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 6 */
/* unknown exports provided */
/* all exports used */
/*!*********************************!*\
  !*** ./src/ES6Test/Maps/Map.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Map = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n/*import rbush from '../../lib/rtree';*/\n\n\nvar _BGMapWrapper = __webpack_require__(/*! ./BGMapWrapper */ 4);\n\nvar _chroma = __webpack_require__(/*! ../../lib/chroma.min */ 7);\n\nvar _chroma2 = _interopRequireDefault(_chroma);\n\nvar _Aesthetic = __webpack_require__(/*! ../Aesthetic */ 1);\n\nvar _earcut = __webpack_require__(/*! ../../lib/earcut */ 8);\n\nvar _earcut2 = _interopRequireDefault(_earcut);\n\nvar _rtree = __webpack_require__(/*! ../../lib/rtree */ 9);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * This class contains the Map class which represents the current map.\r\n * Each map has a group of functions available.\r\n */\nvar Map = exports.Map = function () {\n    function Map(type, geometry, options) {\n        _classCallCheck(this, Map);\n\n        console.log(\"Map constructor called -> super()\");\n        /* return this;*/ //@TODO Remove isnt doing anything? or is it saving the 3 parameters?\n    }\n\n    _createClass(Map, [{\n        key: 'program',\n        value: function program() {\n            this._webgl.program = this._webgl.gl.createProgram();\n            this._webgl.heatmapProgram = [];\n            this._webgl.heatmapProgram[0] = this._webgl.gl.createProgram();\n            this._webgl.heatmapProgram[1] = this._webgl.gl.createProgram();\n\n            var source_code = this.generateShaders();\n\n            var vertex_shader = this.shader(this._webgl.gl.VERTEX_SHADER, source_code.vertex, this._webgl);\n            var fragment_shader = this.shader(this._webgl.gl.FRAGMENT_SHADER, source_code.fragment, this._webgl);\n\n            this._webgl.gl.attachShader(this._webgl.program, vertex_shader);\n            this._webgl.gl.attachShader(this._webgl.program, fragment_shader);\n\n            this._webgl.gl.linkProgram(this._webgl.program);\n            this._webgl.gl.useProgram(this._webgl.program);\n        }\n    }, {\n        key: 'shader',\n        value: function shader(type, source_code, _webgl) {\n            //Added HERE by Rui\n            var shader = _webgl.gl.createShader(type);\n\n            _webgl.gl.shaderSource(shader, source_code);\n            _webgl.gl.compileShader(shader);\n\n            console.log(\"shader \" + (type.valueOf() == 35633 ? \"vertex\" : \"fragment\") + \": \" + _webgl.gl.getShaderInfoLog(shader));\n\n            return shader;\n        }\n    }, {\n        key: 'generateShaders',\n        value: function generateShaders() {\n            //Added HERE by Rui @TODO Refactor to use ES6 `` instead of +=\n            //general\n\n            var vertexSourceCode = \" attribute vec4 vertexCoord; \";\n            vertexSourceCode += \"\\n\tattribute float aPointSize; \";\n            vertexSourceCode += \"\\n\tuniform mat4 projection; \";\n            vertexSourceCode += \"\\n\tattribute float a_opacity; \";\n            vertexSourceCode += \"\\n\tvarying float v_opacity; \";\n            //vertexSourceCode+= \"\\n\tvarying vec4 u_color; \" ; //delete\n            vertexSourceCode += \"\\n\tvoid main() {\";\n            vertexSourceCode += \"\\n\t\tgl_Position = (projection * vertexCoord); \";\n            vertexSourceCode += \"\\n\t\tgl_PointSize = aPointSize; v_opacity = a_opacity; \";\n            vertexSourceCode += \"\\n}\";\n\n            var fragmentSourceCode = \"precision mediump float;\";\n            fragmentSourceCode += \"\\n\t\tuniform vec4 u_color;\"; //uniform\n            fragmentSourceCode += \"\\n\t\tvarying float v_opacity; \";\n            fragmentSourceCode += \"\\n \t\tuniform float isPoint;\";\n            fragmentSourceCode += \"\\n\t\tvoid main(){\";\n            fragmentSourceCode += \"\\n\t\t\tfloat border = 0.5;\";\n            fragmentSourceCode += \"\\n\t\t\tfloat radius = 0.5;\";\n            fragmentSourceCode += \"\\n\t\t\tfloat centerDist = length(gl_PointCoord - 0.5);\";\n            fragmentSourceCode += \"\\n\t\t\tfloat alpha;\";\n            fragmentSourceCode += \"\\n\t\t\tif (u_color[3] == -1.0){\"; //unnecessary??\n            fragmentSourceCode += \"\\n\t\t\t\talpha =  v_opacity * step(centerDist, radius);\"; //unnecessary??\n            fragmentSourceCode += \"\\n\t\t\t}\"; //unnecessary??\n            fragmentSourceCode += \"\\n\t\t\telse{\"; //unnecessary??\n            fragmentSourceCode += \"\\n\t\t\t\talpha =  u_color[3] * step(centerDist, radius);\";\n            fragmentSourceCode += \"\\n\t\t\t}\"; //unnecessary??\n            fragmentSourceCode += \"\\n\t\t\tif(isPoint == 1.0 ){\";\n            fragmentSourceCode += \"\\n\t\t\tif (alpha < 0.1) discard;\";\n            fragmentSourceCode += \"\\n\t\t\t\tgl_FragColor = vec4(u_color[0], u_color[1], u_color[2], alpha);}\";\n            fragmentSourceCode += \"\\n \t\t\telse\";\n            fragmentSourceCode += \"\\n\t\t\t\tgl_FragColor = vec4(u_color[0], u_color[1], u_color[2], u_color[3]);\";\n            fragmentSourceCode += \"\\n\t\t}\";\n\n            return { vertex: vertexSourceCode, fragment: fragmentSourceCode };\n        }\n    }, {\n        key: 'addAesthetic',\n        value: function addAesthetic(aes) {\n            this.aesthetics.push(aes);\n        }\n    }, {\n        key: 'setAesthetic',\n        value: function setAesthetic(id, aes) {\n            for (var i = 0; i < aesthetics.length; i++) {\n                if (id == aesthetics[i].id) {\n                    aesthetics[i] = aes;\n                    break;\n                }\n            }\n        }\n    }, {\n        key: 'buildLegend',\n        value: function buildLegend() {\n            var mapCanvas = document.getElementById('mapCanvas' + this.id);\n            var legendDiv = document.createElement('div');\n            legendDiv.id = 'legendDiv' + this.id;\n            legendDiv.style.position = 'absolute';\n            legendDiv.style.backgroundColor = 'white';\n            //legendDiv.style.height = 200;//(mapCanvas.height / 10);\n            legendDiv.style.width = 250; //(mapCanvas.width / 10);\n            legendDiv.style.bottom = 20;\n            legendDiv.style.right = 0;\n            legendDiv.style.borderColor = 'black';\n            legendDiv.style.border = 'solid';\n\n            var table = document.createElement('table');\n            var thvalue = document.createElement('th');\n            var thcolor = document.createElement('th');\n            //thvalue.style.width = 125;\n            table.style.zIndex = \"2000\";\n            thcolor.style.width = 100;\n            table.appendChild(thcolor);\n            table.appendChild(thvalue);\n\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this.aesthetics[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var currentaes = _step.value;\n\n                    //if(currentaes._features.length > 0 || currentaes._allFeatures.length > 0){\n                    var row = document.createElement('tr');\n                    var value = document.createElement('td');\n                    var color = document.createElement('td');\n                    var ptext = document.createElement('p');\n                    var text = void 0;\n                    if (typeof currentaes.range[0] === 'number') text = document.createTextNode('[' + currentaes.range[0] + ', ' + currentaes.range[1] + '[');else text = document.createTextNode(currentaes.range[0]);\n                    ptext.appendChild(text);\n                    value.appendChild(ptext);\n\n                    var colorDiv = document.createElement('div');\n                    colorDiv.style.position = 'relative';\n                    var rgbc = 'rgba(' + currentaes.fillColor[0] + ',' + currentaes.fillColor[1] + ',' + currentaes.fillColor[2] + ',' + currentaes.fillColor[3] + ')';\n                    //console.log(rgbc);\n                    colorDiv.style['backgroundColor'] = rgbc;\n                    colorDiv.style.height = 25; //(mapCanvas.height / 10);\n                    colorDiv.style.width = 80; //(mapCanvas.width / 10);\n\n\n                    color.appendChild(colorDiv);\n\n                    row.appendChild(color);\n                    row.appendChild(value);\n\n                    table.appendChild(row);\n                    //}\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            legendDiv.appendChild(table);\n            this.map.getContainer().appendChild(legendDiv);\n        }\n    }, {\n        key: 'preProcessData',\n        value: function preProcessData(geojson, numberOf, algorithm, colorscheme) {\n\n            var aesarray = [];\n            var values = [];\n            var strings = [];\n            var breaks = void 0;\n            var fcolor = void 0;\n            for (var g = 0; g < geojson.features.length && (this.maxfeatures == undefined || g < this.maxfeatures); g++) {\n                if (geojson.features[g].properties[this.attr] != null && typeof geojson.features[g].properties[this.attr] == 'number') {\n                    values.push(geojson.features[g].properties[this.attr]);\n                    this.max = Math.max(this.max, geojson.features[g].properties[this.attr]);\n                    this.min = Math.min(this.min, geojson.features[g].properties[this.attr]);\n                } else if (!strings.includes(geojson.features[g].properties[this.attr])) strings.push(geojson.features[g].properties[this.attr]);\n            }\n            if (values.length > 0) {\n                //quantitative\n                if (this.breaks == undefined) {\n                    if (numberOf > 1) breaks = this.calcClassBreaks(values, algorithm, numberOf);else breaks = [this.min, this.max];\n                } else {\n                    breaks = this.breaks;\n                }\n                if (breaks.length > 2) {\n                    fcolor = _chroma2.default.scale(colorscheme).colors(breaks.length - 1);\n                    for (var i = 0; i < breaks.length - 1; i++) {\n                        var color = (0, _chroma2.default)(fcolor[i]).rgb();\n                        if (i != breaks.length - 2) {\n                            var aes = new _Aesthetic.Aesthetic(i, this.attr, [Math.round(color[0]), Math.round(color[1]), Math.round(color[2]), this.alpha], [0, 0, 0, 1], null, [breaks[i], breaks[i + 1]]);\n                        } else {\n                            var aes = new _Aesthetic.Aesthetic(i, this.attr, [Math.round(color[0]), Math.round(color[1]), Math.round(color[2]), this.alpha], [0, 0, 0, 1], null, [breaks[i], breaks[i + 1]]);\n                            aes.outer = true;\n                        }\n                        aesarray.push(aes);\n                    }\n                } else {\n                    color = (0, _chroma2.default)(colorscheme[0]).rgb();\n                    var aes = new _Aesthetic.Aesthetic(i, this.attr, [Math.round(color[0]), Math.round(color[1]), Math.round(color[2]), this.alpha], [0, 0, 0, 1], null, [breaks[0], breaks[1]]);\n                    aes.outer = true;\n                    aesarray.push(aes);\n                }\n            } else {\n                //qualitative\n                if (strings.length > 0) {\n                    breaks = strings;\n                    if (typeof colorscheme === 'string') {\n                        //string\n                        fcolor = _chroma2.default.scale(colorscheme).colors(breaks.length);\n                    } else {\n                        //array\n                        fcolor = _chroma2.default.scale(colorscheme).colors(breaks.length);\n                    }\n                    for (var i = 0; i < breaks.length; i++) {\n                        var color = (0, _chroma2.default)(fcolor[i]).rgb();\n                        var aes = new _Aesthetic.Aesthetic(i, this.attr, [Math.round(color[0]), Math.round(color[1]), Math.round(color[2]), 1], [0, 0, 0, 1], null, [strings[i]]);\n                        aesarray.push(aes);\n                    }\n                }\n            }\n\n            this.aesthetics = aesarray;\n            //return aesarray;\n\n        }\n    }, {\n        key: 'calcClassBreaks',\n        value: function calcClassBreaks(values, algorithm, numberOf) {\n            var breaks = void 0;\n            switch (algorithm) {\n                case 'equidistant':\n                    breaks = _chroma2.default.limits(values, 'e', numberOf);\n                    break;\n\n                case 'quantile':\n                    breaks = _chroma2.default.limits(values, 'q', numberOf);\n                    break;\n\n                case 'k-means':\n                    breaks = _chroma2.default.limits(values, 'k', numberOf);\n                    break;\n\n                default:\n                    breaks = _chroma2.default.limits(values, 'q', numberOf);\n                    break;\n            }\n            return breaks;\n        }\n    }, {\n        key: 'insertFeature',\n        value: function insertFeature(id, properties, triangles, borders, points) {\n            var flag = false;\n            for (var i = 0; i < this.aesthetics.length; i++) {\n                if (this.aesthetics[i].checkProperty(properties[this.aesthetics[i].getAttr()]) == true) {\n                    this.aesthetics[i].addFeature(id, properties, triangles, borders, points);\n                    flag = true;\n                }\n            }\n            if (!flag) {\n                //TODO\n                //console.log(\"TODO: feature does not fit into any of the aesthetics defined.\\n Value: \" + properties[this.attr]);\n            }\n        }\n    }, {\n        key: 'insertGroupedFeature',\n        value: function insertGroupedFeature(idaes, triangles, borders, points) {\n\n            this.aesthetics[idaes].addGroupedFeature(null, triangles, borders, points);\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n\n            alert(\"draw() not implemented\");\n        }\n    }, {\n        key: 'processPolygon',\n        value: function processPolygon(polygon) {\n\n            if (polygon.geometry.type == \"Polygon\") {\n                var outsidepolygon = polygon.geometry.coordinates[0];\n\n                var insidepolygons = [];\n                for (var k = 1; k < polygon.geometry.coordinates.length; k++) {\n                    //todo inside polygon\n                    //insidepolygons.push(polygon.geometry.coordinates[i][k]);\n                }\n                var tempVerts = new Array();\n                for (var out = 0; out < outsidepolygon.length - 1; out++) {\n                    tempVerts.push(outsidepolygon[out][0], outsidepolygon[out][1]);\n                    _vertexcount += (outsidepolygon.length + 1) / 2;\n                    //console.log(\"lon: \" + outsidepolygon[out][0] + \" lat: \" + outsidepolygon[out][1]);\n                }\n\n                var triangles_vert = (0, _earcut2.default)(tempVerts);\n                _tricount += triangles_vert.length / 3;\n                polyarray.push({ triangles: triangles_vert, vertex: tempVerts });\n            } else if (polygon.geometry.type == \"MultiPolygon\") {\n                var polyarray = [];\n                for (var i = 0; i < polygon.geometry.coordinates.length; i++) {\n\n                    var outsidepolygon = polygon.geometry.coordinates[i][0];\n\n                    var insidepolygons = [];\n                    for (var k = 1; k < polygon.geometry.coordinates[i].length; k++) {\n                        //todo inside polygon\n                        insidepolygons.push(polygon.geometry.coordinates[i][k]);\n                    }\n                    var tempVerts = new Array();\n                    _vertexcount += outsidepolygon.length;\n                    for (var out = 0; out < outsidepolygon.length - 1; out++) {\n                        tempVerts.push(outsidepolygon[out][0], outsidepolygon[out][1]);\n\n                        //console.log(\"lon: \" + outsidepolygon[out][0] + \" lat: \" + outsidepolygon[out][1]);\n                    }\n\n                    var triangles_vert = (0, _earcut2.default)(tempVerts);\n\n                    //var temp = earcut.flatten(polygon.geometry.coordinates[i]);\n                    //var triangles_vert = earcut(temp.vertices, temp.holes, temp.dimensions);\n                    _tricount += triangles_vert.length / 3;\n                    polyarray.push({ triangles: triangles_vert, vertex: tempVerts });\n                    //console.log(polyarray);\n                }\n\n                return polyarray;\n            }\n        }\n    }, {\n        key: 'processData',\n        value: function processData(geojson) {\n\n            this.loadGeoJSON(geojson);\n        }\n    }, {\n        key: 'createAndInsertFeature',\n        value: function createAndInsertFeature(id, geometry, properties) {\n            var gl = this._webgl.gl;\n            if (this.minuend != undefined && this.subtrahend != undefined && typeof properties[this.minuend] == 'number' && properties[this.subtrahend] != undefined && typeof properties[this.subtrahend] == 'number' && properties[this.subtrahend] != undefined) {\n                properties[this.attr] = properties[this.minuend] - properties[this.subtrahend];\n            }\n\n            if (geometry.type == \"Polygon\" || geometry.type == \"MultiPolygon\") {\n                this.hasPolygons = true;\n                var polygons = this.processPolygon({ geometry: geometry, properties: properties });\n\n                var currentBorders = [];\n                var currentTriangles = [];\n                var bufferT = [];\n                var bufferB = [];\n\n                for (var j = 0; j < polygons.length; j++) {\n                    var trianglespolygon = polygons[j].triangles;\n                    var border = polygons[j].vertex;\n                    currentTriangles[j] = new Array();\n                    currentBorders[j] = new Array();\n                    for (var h = 0; h < trianglespolygon.length; h++) {\n                        var pixel = this.latLongToPixelXY(border[trianglespolygon[h] * 2], border[trianglespolygon[h] * 2 + 1]);\n                        currentTriangles[j].push(pixel.x, pixel.y);\n\n                        if (h == trianglespolygon.length - 1) {\n                            bufferT.push(gl.createBuffer());\n\n                            var vertArray = new Float32Array(currentTriangles[j]);\n\n                            gl.fsize = vertArray.BYTES_PER_ELEMENT;\n                            gl.bindBuffer(gl.ARRAY_BUFFER, bufferT[j]);\n                            gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.STATIC_DRAW);\n\n                            bufferT[j].itemSize = 2;\n                            bufferT[j].numItems = vertArray.length / 2;\n                        }\n                    }\n\n                    for (var y = 0; y < border.length; y += 2) {\n                        var pixel = this.latLongToPixelXY(border[y], border[y + 1]);\n                        currentBorders[j].push(pixel.x, pixel.y);\n\n                        if (y == border.length - 2) {\n                            bufferB.push(gl.createBuffer());\n\n                            var vertArray = new Float32Array(currentBorders[j]);\n\n                            gl.fsize = vertArray.BYTES_PER_ELEMENT;\n                            gl.bindBuffer(gl.ARRAY_BUFFER, bufferB[j]);\n                            gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.STATIC_DRAW);\n\n                            bufferB[j].itemSize = 2;\n                            bufferB[j].numItems = vertArray.length / 2;\n                        }\n                    }\n                }\n                //polygon\n                this.insertFeature(id, properties, bufferT, bufferB, []);\n            } else if (geometry.type == \"Point\" && this.dynamic == true) {\n                //dum\n                var currentPoints = [];\n                currentPoints[0] = new Array();\n                var pixel = this.latLongToPixelXY(geometry.coordinates[0], geometry.coordinates[1]);\n                currentPoints[0].push(pixel.x, pixel.y);\n                var bufferP = [];\n                bufferP.push(gl.createBuffer());\n\n                var vertArray = new Float32Array(currentPoints[0]);\n\n                gl.fsize = vertArray.BYTES_PER_ELEMENT;\n                gl.bindBuffer(gl.ARRAY_BUFFER, bufferP[0]);\n                gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.STATIC_DRAW);\n\n                bufferP[0].itemSize = 2;\n                bufferP[0].numItems = vertArray.length / 2;\n\n                this.insertFeature(id, properties, [], [], bufferP);\n\n                if (this.treepoints == null || this.treepoints == undefined) this.treepoints = [];\n                this.treepoints.push({ lon: geometry.coordinates[0], lat: geometry.coordinates[1], properties: properties });\n            } else if (geometry.type == \"Point\" && this.dynamic == false) {\n                //debugger;\n                var pixel = this.latLongToPixelXY(geometry.coordinates[0], geometry.coordinates[1]);\n                if (this.tempPoints == null || this.tempPoints == undefined) {\n                    this.tempPoints = new Array();\n                    for (var a = 0; a < this.aesthetics.length; a++) {\n                        this.tempPoints[a] = [];\n                    }\n                }\n\n                var aesarrays = this.fitFeature(properties);\n                for (var y = 0; y < aesarrays.length; y++) {\n                    this.tempPoints[aesarrays[y]].push(pixel.x, pixel.y);\n                }\n\n                if (this.treepoints == null) this.treepoints = [];\n                this.treepoints.push({ lon: geometry.coordinates[0], lat: geometry.coordinates[1], properties: properties });\n            }\n        }\n    }, {\n        key: 'buildTrees',\n        value: function buildTrees(geojson) {\n            var gl = this._webgl.gl;\n            if (this.tempPoints != null) {\n                for (var t = 0; t < this.tempPoints.length; t++) {\n                    if (this.tempPoints[t].length > 0) {\n                        var bufferP = [];\n                        bufferP.push(gl.createBuffer());\n\n                        var vertArray = new Float32Array(this.tempPoints[t]);\n\n                        gl.fsize = vertArray.BYTES_PER_ELEMENT;\n                        gl.bindBuffer(gl.ARRAY_BUFFER, bufferP[0]);\n                        gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.STATIC_DRAW);\n\n                        bufferP[0].itemSize = 2;\n                        bufferP[0].numItems = vertArray.length / 2;\n                        this.insertGroupedFeature(t, [], [], bufferP);\n                    }\n                }\n            }\n            //console.log(geojson)\n            if (this.treepoints != null) this.kdtree = new kdTree(this.treepoints, function (a, b) {\n                return (a.lon - b.lon) ** 2 + (a.lat - b.lat) ** 2;\n            }, [\"lon\", \"lat\", \"properties\"]);\n            if (this.hasPolygons == true)\n                //this.rtree = new PolygonLookup(geojson);\n                console.log(\"@Rui LOOK I WAS REMOVED\");\n        }\n    }, {\n        key: 'loadGeoJSON',\n        value: function loadGeoJSON(geojson) {\n            for (var g = 0; g < geojson.features.length && (this.maxfeatures == undefined || g < this.maxfeatures); g++) {\n                geojson.features[g].properties['_gisplayid'] = g;\n                var geometry = geojson.features[g].geometry;\n                var properties = geojson.features[g].properties;\n                this.createAndInsertFeature(g, geometry, properties);\n            }\n            this.buildTrees(geojson);\n        }\n    }, {\n        key: 'createCanvas',\n        value: function createCanvas() {\n            var canvas = this.map.createCanvas(this.id);\n\n            //init webgl properties\n            this._webgl = {\n                gl: null,\n                program: null,\n                projection: null\n            };\n\n            this._webgl.gl = canvas.getContext(\"webgl\");\n            this._webgl.projection = new Float32Array(16);\n            this._webgl.projection.set([2 / canvas.width, 0, 0, 0, 0, -2 / canvas.height, 0, 0, 0, 0, 0, 0, -1, 1, 0, 1]);\n\n            this._webgl.gl.viewport(0, 0, this.map.getContainer().offsetWidth, this.map.getContainer().offsetHeight);\n            this._webgl.gl.disable(this._webgl.gl.DEPTH_TEST);\n        }\n    }, {\n        key: 'getNumberOfFeatures',\n        value: function getNumberOfFeatures() {\n            var count = 0;\n            for (var i = 0; i < this.aesthetics.length; i++) {\n                count += this.aesthetics[i]._features.length;\n            }\n            return count;\n        }\n    }, {\n        key: 'scaleProjection',\n        value: function scaleProjection(matrix, scaleX, scaleY) {\n            // scaling x and y, which is just scaling first two rows of matrix\n            matrix[0] *= scaleX;\n            matrix[1] *= scaleX;\n            matrix[2] *= scaleX;\n            matrix[3] *= scaleX;\n\n            matrix[4] *= scaleY;\n            matrix[5] *= scaleY;\n            matrix[6] *= scaleY;\n            matrix[7] *= scaleY;\n        }\n    }, {\n        key: 'translateProjection',\n        value: function translateProjection(matrix, tx, ty) {\n            // translation is in last row of matrix\n            matrix[12] += matrix[0] * tx + matrix[4] * ty;\n            matrix[13] += matrix[1] * tx + matrix[5] * ty;\n            matrix[14] += matrix[2] * tx + matrix[6] * ty;\n            matrix[15] += matrix[3] * tx + matrix[7] * ty;\n        }\n    }, {\n        key: 'latLongToPixelXY',\n        value: function latLongToPixelXY(longitude, latitude) {\n            var pi_180 = Math.PI / 180.0;\n            var pi_4 = Math.PI * 4;\n            var sinLatitude = Math.sin(latitude * pi_180);\n            var pixelY = (0.5 - Math.log((1 + sinLatitude) / (1 - sinLatitude)) / pi_4) * 256;\n            var pixelX = (longitude + 180) / 360 * 256;\n\n            var pixel = { x: pixelX, y: pixelY };\n\n            return pixel;\n        }\n    }, {\n        key: 'clear',\n        value: function clear() {\n            var gl = this._webgl.gl;\n            gl.clear(gl.COLOR_BUFFER_BIT);\n            gl.disable(gl.DEPTH_TEST);\n        }\n    }, {\n        key: 'drawTriangles',\n        value: function drawTriangles(aes) {\n            var gl = this._webgl.gl;\n            if (gl == null) return;\n            var matrixProjection = new Float32Array(16);\n\n            //gl.clear(gl.COLOR_BUFFER_BIT);\n            //gl.disable(gl.DEPTH_TEST);\n\n            //gl.enable(gl.BLEND);\n            //gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\n            var currentZoom = this.map.getZoom();\n            var pointSize = Math.max(currentZoom - 5.0, 1.0);\n\n            matrixProjection.set(this._webgl.projection);\n\n            var scale = 2 ** currentZoom;\n            this.scaleProjection(matrixProjection, scale, scale);\n\n            var offset = this.latLongToPixelXY(this.map.getLngBound(), this.map.getLatBound());\n            this.translateProjection(matrixProjection, -offset.x, -offset.y);\n\n            var projectionLocation = gl.getUniformLocation(this._webgl.program, 'projection');\n            gl.uniformMatrix4fv(projectionLocation, false, matrixProjection);\n\n            var vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\n            gl.vertexAttrib1f(vertexSizeLocation, pointSize);\n\n            var isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\n            gl.uniform1f(isPointLocation, 0.0);\n\n            var vertexCoordLocation = gl.getAttribLocation(this._webgl.program, 'vertexCoord');\n\n            var vertexColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\n\n            /** \r\n             * \r\n             *  Draw Polygons' Interior\r\n             *  **/\n            var fsize = Float32Array.BYTES_PER_ELEMENT;\n            //console.log(\"Numero de Buffers: \", buffers.length);\n\n            gl.uniform4f(vertexColorLocation, aes.fillColor[0] / 255, aes.fillColor[1] / 255, aes.fillColor[2] / 255, aes.fillColor[3]);\n\n            for (var i = 0; i < aes._features.length; i++) {\n                for (var y = 0; y < aes._features[i]._triangles.length; y++) {\n\n                    gl.bindBuffer(gl.ARRAY_BUFFER, aes._features[i]._triangles[y]);\n\n                    gl.enableVertexAttribArray(vertexCoordLocation);\n                    gl.vertexAttribPointer(vertexCoordLocation, 2, gl.FLOAT, false, fsize * 2, 0);\n                    //gl.vertexAttribPointer(vertexColorLocation, 4, gl.FLOAT, false, fsize * 6, fsize * 2);\n                    //gl.enableVertexAttribArray(vertexColorLocation);\n\n\n                    gl.drawArrays(gl.TRIANGLES, 0, aes._features[i]._triangles[y].numItems);\n                }\n            }\n        }\n    }, {\n        key: 'drawBorders',\n        value: function drawBorders(aes) {\n            var gl = this._webgl.gl;\n            if (gl == null) return;\n            var matrixProjection = new Float32Array(16);\n\n            //gl.clear(gl.COLOR_BUFFER_BIT);\n            //gl.disable(gl.DEPTH_TEST);\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n            var currentZoom = this.map.getZoom();\n            var pointSize = Math.max(currentZoom - 5.0, 1.0);\n\n            matrixProjection.set(this._webgl.projection);\n\n            var scale = 2 ** currentZoom;\n            this.scaleProjection(matrixProjection, scale, scale);\n\n            var offset = this.latLongToPixelXY(this.map.getLngBound(), this.map.getLatBound());\n            this.translateProjection(matrixProjection, -offset.x, -offset.y);\n\n            var projectionLocation = gl.getUniformLocation(this._webgl.program, 'projection');\n            gl.uniformMatrix4fv(projectionLocation, false, matrixProjection);\n\n            var vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\n            gl.vertexAttrib1f(vertexSizeLocation, pointSize);\n\n            var vertexCoordLocation = gl.getAttribLocation(this._webgl.program, 'vertexCoord');\n\n            var vertexColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\n\n            var isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\n            gl.uniform1f(isPointLocation, 0.0);\n\n            /** \r\n             * \r\n             *  Draw Polygons' Interior\r\n             *  **/\n            var fsize = Float32Array.BYTES_PER_ELEMENT;\n            //console.log(\"Numero de Buffers: \", buffers.length);\n\n            gl.uniform4f(vertexColorLocation, aes.strokeColor[0] / 255, aes.strokeColor[1] / 255, aes.strokeColor[2] / 255, aes.strokeColor[3]);\n\n            for (var i = 0; i < aes._features.length; i++) {\n                for (var y = 0; y < aes._features[i]._borders.length; y++) {\n\n                    gl.bindBuffer(gl.ARRAY_BUFFER, aes._features[i]._borders[y]);\n\n                    gl.enableVertexAttribArray(vertexCoordLocation);\n                    gl.vertexAttribPointer(vertexCoordLocation, 2, gl.FLOAT, false, fsize * 2, 0);\n                    //gl.vertexAttribPointer(vertexColorLocation, 4, gl.FLOAT, false, fsize * 6, fsize * 2);\n                    //gl.enableVertexAttribArray(vertexColorLocation);\n\n\n                    gl.drawArrays(gl.LINE_LOOP, 0, aes._features[i]._borders[y].numItems);\n                }\n            }\n        }\n    }, {\n        key: 'drawPoints',\n        value: function drawPoints(aes) {\n\n            var gl = this._webgl.gl;\n            if (gl == null) return;\n            var matrixProjection = new Float32Array(16);\n\n            //gl.clear(gl.COLOR_BUFFER_BIT);\n            //gl.disable(gl.DEPTH_TEST);\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n            var currentZoom = this.map.getZoom();\n            var pointSize = Math.max(currentZoom - 4.0 + aes.pointSize, aes.pointSize);\n\n            matrixProjection.set(this._webgl.projection);\n\n            var scale = 2 ** currentZoom;\n            this.scaleProjection(matrixProjection, scale, scale);\n\n            var offset = this.latLongToPixelXY(this.map.getLngBound(), this.map.getLatBound());\n            this.translateProjection(matrixProjection, -offset.x, -offset.y);\n\n            var projectionLocation = gl.getUniformLocation(this._webgl.program, 'projection');\n            gl.uniformMatrix4fv(projectionLocation, false, matrixProjection);\n\n            var vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\n            gl.vertexAttrib1f(vertexSizeLocation, pointSize);\n\n            var vertexCoordLocation = gl.getAttribLocation(this._webgl.program, 'vertexCoord');\n\n            var vertexColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\n\n            var isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\n            gl.uniform1f(isPointLocation, 1.0);\n\n            /** \r\n             * \r\n             *  Draw Polygons' Interior\r\n             *  **/\n            var fsize = Float32Array.BYTES_PER_ELEMENT;\n            //console.log(\"Numero de Buffers: \", buffers.length);\n\n            gl.uniform4f(vertexColorLocation, aes.fillColor[0] / 255, aes.fillColor[1] / 255, aes.fillColor[2] / 255, aes.fillColor[3]);\n\n            for (var i = 0; i < aes._features.length && this.dynamic == true; i++) {\n                for (var y = 0; y < aes._features[i]._points.length; y++) {\n\n                    gl.bindBuffer(gl.ARRAY_BUFFER, aes._features[i]._points[y]);\n\n                    gl.enableVertexAttribArray(vertexCoordLocation);\n                    gl.vertexAttribPointer(vertexCoordLocation, 2, gl.FLOAT, false, fsize * 2, 0);\n                    //gl.vertexAttribPointer(vertexColorLocation, 4, gl.FLOAT, false, fsize * 6, fsize * 2);\n                    //gl.enableVertexAttribArray(vertexColorLocation);\n\n\n                    gl.drawArrays(gl.POINTS, 0, aes._features[i]._points[y].numItems);\n                    //1);\n                }\n            }\n\n            for (var i = 0; this.dynamic == false && aes._allFeatures != null && i < aes._allFeatures.length; i++) {\n                for (var y = 0; y < aes._allFeatures[i]._points.length; y++) {\n\n                    gl.bindBuffer(gl.ARRAY_BUFFER, aes._allFeatures[i]._points[y]);\n\n                    gl.enableVertexAttribArray(vertexCoordLocation);\n                    gl.vertexAttribPointer(vertexCoordLocation, 2, gl.FLOAT, false, fsize * 2, 0);\n                    //gl.vertexAttribPointer(vertexColorLocation, 4, gl.FLOAT, false, fsize * 6, fsize * 2);\n                    //gl.enableVertexAttribArray(vertexColorLocation);\n\n\n                    gl.drawArrays(gl.POINTS, 0, aes._allFeatures[i]._points[y].numItems);\n                    //gl.drawArrays(gl.TRIANGLE_STRIP, 0, aes._allFeatures[i]._points[y].numItems-2);\t\n                    //1);\n                }\n            }\n        }\n    }, {\n        key: 'drawContinuousPolygons',\n        value: function drawContinuousPolygons(aes) {\n\n            var gl = this._webgl.gl;\n            if (gl == null) return;\n            var matrixProjection = new Float32Array(16);\n\n            //gl.clear(gl.COLOR_BUFFER_BIT);\n            //gl.disable(gl.DEPTH_TEST);\n\n            //gl.enable(gl.BLEND);\n            //gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\n            var currentZoom = this.map.getZoom();\n            var pointSize = Math.max(currentZoom - 5.0, 1.0);\n\n            matrixProjection.set(this._webgl.projection);\n\n            var scale = 2 ** currentZoom;\n            this.scaleProjection(matrixProjection, scale, scale);\n\n            var offset = this.latLongToPixelXY(this.map.getLngBound(), this.map.getLatBound());\n            this.translateProjection(matrixProjection, -offset.x, -offset.y);\n\n            var projectionLocation = gl.getUniformLocation(this._webgl.program, 'projection');\n            gl.uniformMatrix4fv(projectionLocation, false, matrixProjection);\n\n            var vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\n            gl.vertexAttrib1f(vertexSizeLocation, pointSize);\n\n            var isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\n            gl.uniform1f(isPointLocation, 0.0);\n\n            var vertexCoordLocation = gl.getAttribLocation(this._webgl.program, 'vertexCoord');\n\n            var vertexColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\n\n            /** \r\n             * \r\n             *  Draw Polygons' Interior\r\n             *  **/\n            var fsize = Float32Array.BYTES_PER_ELEMENT;\n            //console.log(\"Numero de Buffers: \", buffers.length);\n\n\n            for (var i = 0; i < aes._features.length; i++) {\n                var ucolor = void 0;\n                var color = void 0;\n                var diff = aes._features[i]._properties[this.attr];\n                if (diff == 0) color = aes.fillColor(0.5).rgb();else {\n                    if (diff > 0) {\n                        color = aes.fillColor(0.5 + diff / this.max / 2).rgb();\n                    } else {\n                        color = aes.fillColor(0.5 - diff / this.min / 2).rgb();\n                    }\n                }\n                ucolor = [Math.round(color[0]), Math.round(color[1]), Math.round(color[2]), this.alpha];\n\n                gl.uniform4f(vertexColorLocation, ucolor[0] / 255, ucolor[1] / 255, ucolor[2] / 255, this.alpha);\n                for (var y = 0; y < aes._features[i]._triangles.length; y++) {\n\n                    gl.bindBuffer(gl.ARRAY_BUFFER, aes._features[i]._triangles[y]);\n\n                    gl.enableVertexAttribArray(vertexCoordLocation);\n                    gl.vertexAttribPointer(vertexCoordLocation, 2, gl.FLOAT, false, fsize * 2, 0);\n                    //gl.vertexAttribPointer(vertexColorLocation, 4, gl.FLOAT, false, fsize * 6, fsize * 2);\n                    //gl.enableVertexAttribArray(vertexColorLocation);\n\n\n                    gl.drawArrays(gl.TRIANGLES, 0, aes._features[i]._triangles[y].numItems);\n                }\n            }\n        }\n    }, {\n        key: 'drawProporcionalPoints',\n        value: function drawProporcionalPoints(aes) {\n\n            var gl = this._webgl.gl;\n            if (gl == null) return;\n            var matrixProjection = new Float32Array(16);\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n            var currentZoom = this.map.getZoom();\n\n            matrixProjection.set(this._webgl.projection);\n\n            var scale = 2 ** currentZoom;\n            this.scaleProjection(matrixProjection, scale, scale);\n\n            var offset = this.latLongToPixelXY(this.map.getLngBound(), this.map.getLatBound());\n            this.translateProjection(matrixProjection, -offset.x, -offset.y);\n\n            var projectionLocation = gl.getUniformLocation(this._webgl.program, 'projection');\n            gl.uniformMatrix4fv(projectionLocation, false, matrixProjection);\n\n            var vertexCoordLocation = gl.getAttribLocation(this._webgl.program, 'vertexCoord');\n\n            var vertexColorLocation = gl.getUniformLocation(this._webgl.program, \"u_color\");\n\n            var isPointLocation = gl.getUniformLocation(this._webgl.program, 'isPoint');\n            gl.uniform1f(isPointLocation, 1.0);\n\n            /** \r\n             * \r\n             *  Draw Polygons' Interior\r\n             *  **/\n            var fsize = Float32Array.BYTES_PER_ELEMENT;\n            //console.log(\"Numero de Buffers: \", buffers.length);\n\n            gl.uniform4f(vertexColorLocation, aes.fillColor[0] / 255, aes.fillColor[1] / 255, aes.fillColor[2] / 255, this.alpha);\n\n            if (this.dynamic == true) {\n                for (var i in aes._features) {\n                    for (var y in aes._features[i]._points) {\n\n                        gl.bindBuffer(gl.ARRAY_BUFFER, aes._features[i]._points[y]);\n                        var propvalue = parseFloat(aes._features[i]._properties[this.attr]);\n                        var temppointsize = (this.maxpointsize - this.minpointsize) / (this.max - this.min) * (propvalue - this.min);\n                        var pointSize = Math.max(currentZoom - 4.0 + temppointsize * currentZoom / 4, 2);\n                        var vertexSizeLocation = gl.getAttribLocation(this._webgl.program, 'aPointSize');\n                        gl.vertexAttrib1f(vertexSizeLocation, pointSize);\n\n                        gl.enableVertexAttribArray(vertexCoordLocation);\n                        gl.vertexAttribPointer(vertexCoordLocation, 2, gl.FLOAT, false, fsize * 2, 0);\n                        //gl.vertexAttribPointer(vertexColorLocation, 4, gl.FLOAT, false, fsize * 6, fsize * 2);\n                        //gl.enableVertexAttribArray(vertexColorLocation);\n\n\n                        gl.drawArrays(gl.POINTS, 0, aes._features[i]._points[y].numItems);\n                        //1);\n                    }\n                }\n            }\n        }\n    }, {\n        key: 'initialize',\n        value: function initialize() {\n            this.max = null;\n            this.min = null;\n            this.createCanvas();\n            this.program();\n            var mappos = void 0;\n            for (var i = 0; i < maps.length; i++) {\n                if (maps[i].id == this.id) mappos = i;\n            }this.map.onEvent('move', function () {\n                console.log(\"@Rui: mudar o profiling do window para outra coisa?\");\n                if (window.profiling == true) var start = Date.now();\n                maps[mappos].draw();\n                if (window.profiling == true) {\n                    var end = Date.now();\n                    window.console.log('Tempo de processamento de Zoom/Pan (segundos):' + (end - start) / 1000);\n                }\n            });\n\n            this.setupOnclick(mappos);\n        }\n    }, {\n        key: 'setupOnclick',\n        value: function setupOnclick(mappos) {\n            console.log(\"@Rui: profiling mudar de window para? | Rtree e KdTree\");\n            maps[mappos].map.onEvent('click', function (e) {\n                if (window.profiling == true) var start = Date.now();\n                var lat = e.latlng.lat;\n                var lon = e.latlng.lng;\n\n                if (maps[mappos].rtree != undefined) {\n                    var bool = maps[0].rtree.search(lon, lat);\n                    if (bool == undefined) return;else {\n                        //console.log\n                        var s = \"\";\n                        var first = true;\n                        if (maps[mappos].showPropertiesOnClick != null) {\n                            for (var i = 0; i < maps[mappos].showPropertiesOnClick.length; i += 2) {\n                                if (first) {\n                                    s += maps[mappos].showPropertiesOnClick[i + 1] + ': ' + bool.properties[maps[mappos].showPropertiesOnClick[i]];\n                                    first = false;\n                                } else {\n                                    s += '\\n' + maps[mappos].showPropertiesOnClick[i + 1] + ': ' + bool.properties[maps[mappos].showPropertiesOnClick[i]];\n                                }\n                            }\n                        } else {\n\n                            var keys = Object.keys(bool.properties);\n\n                            for (var i = 0; i < keys.length; i++) {\n                                if (keys[i] != \"_gisplayid\") {\n                                    if (first) {\n                                        s += keys[i] + ': ' + bool.properties[keys[i]];\n                                        first = false;\n                                    } else {\n                                        s += '\\n' + keys[i] + ': ' + bool.properties[keys[i]];\n                                    }\n                                }\n                            }\n                        }\n                        if (maps[mappos].interactive == true) alert(s); //todo\n                        if (maps[mappos].mapOnClickCall != undefined && maps[mappos].mapOnClickCall != null) maps[mappos].mapOnClickCall(bool);\n                    }\n                }\n                if (maps[mappos].kdtree != undefined) {\n\n                    var nearest = maps[mappos].kdtree.nearest({ lat: lat, lon: lon }, 1, 128 / 2 ** (map.getZoom() * 2));\n                    if (nearest.length <= 0) return;else {\n                        var bool = nearest[0][0];\n                        //console.log\n                        var s = \"\";\n                        var first = true;\n                        if (maps[mappos].showPropertiesOnClick != null) {\n                            for (var i = 0; i < maps[mappos].showPropertiesOnClick.length; i += 2) {\n                                if (first) {\n                                    s += maps[mappos].showPropertiesOnClick[i + 1] + ': ' + bool.properties[maps[mappos].showPropertiesOnClick[i]];\n                                    first = false;\n                                } else {\n                                    s += '\\n' + maps[mappos].showPropertiesOnClick[i + 1] + ': ' + bool.properties[maps[mappos].showPropertiesOnClick[i]];\n                                }\n                            }\n                        } else {\n\n                            var keys = Object.keys(bool.properties);\n\n                            for (var i = 0; i < keys.length; i++) {\n                                if (keys[i] != \"_gisplayid\") {\n                                    if (first) {\n                                        s += keys[i] + ': ' + bool.properties[keys[i]];\n                                        first = false;\n                                    } else {\n                                        s += '\\n' + keys[i] + ': ' + bool.properties[keys[i]];\n                                    }\n                                }\n                            }\n                        }\n                        if (maps[mappos].interactive == true) alert(s);\n                        if (maps[mappos].mapOnClickCall != undefined && maps[mappos].mapOnClickCall != null) maps[mappos].mapOnClickCall(bool);\n                    }\n                }\n\n                if (window.profiling == true) {\n                    var end = Date.now();\n                    window.console.log('Tempo de processamento de um click (segundos): ' + (end - start) / 1000);\n                }\n            });\n        }\n    }, {\n        key: 'fitFeature',\n        value: function fitFeature(properties) {\n            var result = [];\n            for (var a = 0; a < this.aesthetics.length; a++) {\n                if (this.aesthetics[a].checkProperty(properties[this.aesthetics[a].getAttr()]) == true) result.push(a);\n            }\n            return result;\n        }\n    }, {\n        key: 'loadOptions',\n        value: function loadOptions(options, bgmap) {\n            if (options.customMapService == true) this.map = bgmap;else this.map = new _BGMapWrapper.BGMapWrapper(bgmap);\n            if (options.loader != false) this.loader();\n\n            if (options.showPropertiesOnClick == true) {\n                this.showPropertiesOnClick = null;\n                //append on bgmap object\n            } else if (options.showPropertiesOnClick == false) {\n                //nada\n            } else if (options.showPropertiesOnClick != undefined) {\n                this.showPropertiesOnClick = options.showPropertiesOnClick;\n            }\n            this.alpha = options.alpha != undefined ? options.alpha : 0.8;\n            this.interactive = options.interactive == undefined ? true : !options.interactive;\n            this.attr = options.attr;\n            this.dynamic = options.memorySaver == undefined ? false : !options.memorySaver;\n            this.maxfeatures = options.maxFeatures;\n            this.breaks = options.classBreaks;\n            this.colorscheme = options.colorScheme;\n            this.numberofclasses = options.numberOfClasses;\n            this.algorithm = options.classBreaksMethod;\n            this.legendOnClickCall = options.legendOnClickFunction;\n            this.mapOnClickCall = options.mapOnClickFunction;\n            this.minuend = options.minuend;\n            this.subtrahend = options.subtrahend;\n            this.legendTitle = options.legendTitle != undefined ? options.legendTitle : this.attr != undefined ? this.attr : this.minuend + ' - ' + this.subtrahend;\n            this.numberOfLegendItems = options.numberOfLegendItems != undefined ? options.numberOfLegendItems : 2;\n        }\n    }, {\n        key: 'loader',\n        value: function loader() {\n            this.map.loader();\n        }\n    }, {\n        key: 'drawHeatPoints',\n        value: function drawHeatPoints(aes) {\n            var gl = this._webgl.gl;\n\n            if (gl == null) return;\n            gl.useProgram(this._webgl.heatmapProgram[0]);\n            var matrixProjection = new Float32Array(16);\n\n            gl.clear(gl.COLOR_BUFFER_BIT);\n            gl.enable(gl.BLEND);\n\n            gl.blendFunc(gl.ONE, gl.ONE);\n\n            var currentZoom = map.getZoom();\n            var pointSize = Math.max(currentZoom - 5.0, 1.0);\n\n            matrixProjection.set(this._webgl.projection);\n\n            var scale = 2 ** currentZoom;\n            this.scaleProjection(matrixProjection, scale, scale);\n\n            var offset = this.latLongToPixelXY(this.map.getLngBound(), this.map.getLatBound());\n            this.translateProjection(matrixProjection, -offset.x, -offset.y);\n\n            var projectionLocation = gl.getUniformLocation(this._webgl.heatmapProgram[0], 'projection');\n            gl.uniformMatrix4fv(projectionLocation, false, matrixProjection);\n\n            var vertexCoordLocation = gl.getAttribLocation(this._webgl.heatmapProgram[0], 'position');\n            var deltaLocation = gl.getAttribLocation(this._webgl.heatmapProgram[0], 'delta');\n            var intensityLoc = gl.getAttribLocation(this._webgl.heatmapProgram[0], 'intensity');\n            var vertexSizeLocation = gl.getAttribLocation(this._webgl.heatmapProgram[0], 'aPointSize');\n\n            gl.vertexAttrib1f(vertexSizeLocation, pointSize);\n\n            gl.enableVertexAttribArray(vertexCoordLocation);\n            gl.enableVertexAttribArray(deltaLocation);\n            gl.enableVertexAttribArray(intensityLoc);\n\n            var fsize = Float32Array.BYTES_PER_ELEMENT;\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, aes._allFeatures[0]._points[0]);\n            gl.vertexAttribPointer(vertexCoordLocation, 2, gl.FLOAT, false, fsize * 8, 0 * 2);\n            gl.vertexAttribPointer(deltaLocation, 2, gl.FLOAT, false, fsize * 8, 2 * 4);\n            gl.vertexAttribPointer(intensityLoc, 4, gl.FLOAT, false, fsize * 8, 4 * 4);\n\n            console.log(aes._allFeatures[0]._points[0].numItems);\n            gl.drawArrays(gl.TRIANGLES, 0, aes._allFeatures[0]._points[0].numItems);\n\n            gl.useProgram(this._webgl.heatmapProgram[1]);\n\n            gl.disable(gl.BLEND);\n\n            //console.log(\"fase 1 concluida\");\n\n            var canvas = document.getElementById('mapCanvas' + this.id);\n\n            var source = gl.createTexture();\n\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, source);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, canvas);\n\n            function isPowerOf2(value) {\n                return (value & value - 1) == 0;\n            };\n\n            function steupTextureFilteringAndMips(width, height, gl) {\n                if (isPowerOf2(width) && isPowerOf2(height)) {\n                    // the dimensions are power of 2 so generate mips and turn on \n                    // tri-linear filtering.\n                    gl.generateMipmap(gl.TEXTURE_2D);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n                } else {\n                    // at least one of the dimensions is not a power of 2 so set the filtering\n                    // so WebGL will render it.\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                }\n            };\n\n            steupTextureFilteringAndMips(canvas.width, canvas.height, gl);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n            var vertices = new Float32Array([1, 1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1]);\n            var buffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n            var positionLoc = gl.getAttribLocation(this._webgl.heatmapProgram[1], 'position');\n            var sourceLoc = gl.getUniformLocation(this._webgl.heatmapProgram[1], 'source');\n            gl.enableVertexAttribArray(positionLoc);\n            gl.vertexAttribPointer(positionLoc, 2, gl.FLOAT, false, 0, 0);\n            gl.uniform1i(sourceLoc, 0);\n            gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n            gl.disableVertexAttribArray(positionLoc);\n            //defaults to general program\n            //console.log(\"fase 2 concluida\");\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\n            this._webgl.gl.useProgram(this._webgl.program);\n        }\n    }, {\n        key: 'getNumberOfPolygons',\n        value: function getNumberOfPolygons() {\n            var count = 0;\n            for (var i = 0; i < this.aesthetics.length; i++) {\n                for (var z = 0; z < this.aesthetics[i]._features.length; z++) {\n                    count += this.aesthetics[i]._features[z]._triangles.length;\n                }\n            }\n            return count;\n        }\n    }]);\n\n    return Map;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 7 */
/* unknown exports provided */
/* all exports used */
/*!*******************************!*\
  !*** ./src/lib/chroma.min.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n/*\r\nchroma.js - JavaScript library for color conversions\r\n\r\nCopyright (c) 2011-2015, Gregor Aisch\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n1. Redistributions of source code must retain the above copyright notice, this\r\n   list of conditions and the following disclaimer.\r\n\r\n2. Redistributions in binary form must reproduce the above copyright notice,\r\n   this list of conditions and the following disclaimer in the documentation\r\n   and/or other materials provided with the distribution.\r\n\r\n3. The name Gregor Aisch may not be used to endorse or promote products\r\n   derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\r\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\r\nOF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n*/\n(function () {\n   var a,\n       b,\n       c,\n       d,\n       e,\n       f,\n       g,\n       h,\n       i,\n       j,\n       k,\n       l,\n       m,\n       _n,\n       _o,\n       p,\n       q,\n       r,\n       s,\n       t,\n       u,\n       v,\n       w,\n       x,\n       y,\n       z,\n       A,\n       B,\n       C,\n       D,\n       E,\n       F,\n       G,\n       H,\n       I,\n       J,\n       K,\n       L,\n       M,\n       N,\n       O,\n       P,\n       Q,\n       R,\n       S,\n       T,\n       U,\n       V,\n       W,\n       X,\n       Y,\n       Z,\n       $,\n       _,\n       aa,\n       ba,\n       ca,\n       da,\n       ea,\n       fa,\n       ga,\n       ha,\n       ia,\n       ja,\n       ka,\n       la,\n       ma,\n       na,\n       oa,\n       pa,\n       qa,\n       ra,\n       sa,\n       ta,\n       ua,\n       va,\n       wa,\n       xa,\n       ya,\n       za = [].slice;ua = function () {\n      var a, b, c, d, e;for (a = {}, e = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \"), d = 0, b = e.length; b > d; d++) {\n         c = e[d], a[\"[object \" + c + \"]\"] = c.toLowerCase();\n      }return function (b) {\n         var c;return c = Object.prototype.toString.call(b), a[c] || \"object\";\n      };\n   }(), S = function S(a, b, c) {\n      return null == b && (b = 0), null == c && (c = 1), b > a && (a = b), a > c && (a = c), a;\n   }, va = function va(a) {\n      return a.length >= 3 ? [].slice.call(a) : a[0];\n   }, t = function t(a) {\n      var b;for (b in a) {\n         3 > b ? (a[b] < 0 && (a[b] = 0), a[b] > 255 && (a[b] = 255)) : 3 === b && (a[b] < 0 && (a[b] = 0), a[b] > 1 && (a[b] = 1));\n      }return a;\n   }, d = Math.PI, pa = Math.round, w = Math.cos, B = Math.floor, _ = Math.pow, T = Math.log, ra = Math.sin, sa = Math.sqrt, m = Math.atan2, W = Math.max, l = Math.abs, g = 2 * d, e = d / 3, b = d / 180, f = 180 / d, s = function s() {\n      return arguments[0] instanceof a ? arguments[0] : function (a, b, c) {\n         c.prototype = a.prototype;var d = new c(),\n             e = a.apply(d, b);return Object(e) === e ? e : d;\n      }(a, arguments, function () {});\n   }, k = [], \"undefined\" != typeof module && null !== module && null != module.exports && (module.exports = s),  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n      return s;\n   }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : (oa = \"undefined\" != typeof exports && null !== exports ? exports : this, oa.chroma = s), s.version = \"1.1.1\", j = {}, h = [], i = !1, a = function () {\n      function a() {\n         var a, b, c, d, e, f, g, k, l;for (f = this, b = [], k = 0, d = arguments.length; d > k; k++) {\n            a = arguments[k], null != a && b.push(a);\n         }if (g = b[b.length - 1], null != j[g]) f._rgb = t(j[g](va(b.slice(0, -1))));else {\n            for (i || (h = h.sort(function (a, b) {\n               return b.p - a.p;\n            }), i = !0), l = 0, e = h.length; e > l && (c = h[l], !(g = c.test.apply(c, b))); l++) {}g && (f._rgb = t(j[g].apply(j, b)));\n         }null == f._rgb && console.warn(\"unknown format: \" + b), null == f._rgb && (f._rgb = [0, 0, 0]), 3 === f._rgb.length && f._rgb.push(1);\n      }return a.prototype.alpha = function (a) {\n         return arguments.length ? (this._rgb[3] = a, this) : this._rgb[3];\n      }, a.prototype.toString = function () {\n         return this.name();\n      }, a;\n   }(), s._input = j, s.brewer = q = { OrRd: [\"#fff7ec\", \"#fee8c8\", \"#fdd49e\", \"#fdbb84\", \"#fc8d59\", \"#ef6548\", \"#d7301f\", \"#b30000\", \"#7f0000\"], PuBu: [\"#fff7fb\", \"#ece7f2\", \"#d0d1e6\", \"#a6bddb\", \"#74a9cf\", \"#3690c0\", \"#0570b0\", \"#045a8d\", \"#023858\"], BuPu: [\"#f7fcfd\", \"#e0ecf4\", \"#bfd3e6\", \"#9ebcda\", \"#8c96c6\", \"#8c6bb1\", \"#88419d\", \"#810f7c\", \"#4d004b\"], Oranges: [\"#fff5eb\", \"#fee6ce\", \"#fdd0a2\", \"#fdae6b\", \"#fd8d3c\", \"#f16913\", \"#d94801\", \"#a63603\", \"#7f2704\"], BuGn: [\"#f7fcfd\", \"#e5f5f9\", \"#ccece6\", \"#99d8c9\", \"#66c2a4\", \"#41ae76\", \"#238b45\", \"#006d2c\", \"#00441b\"], YlOrBr: [\"#ffffe5\", \"#fff7bc\", \"#fee391\", \"#fec44f\", \"#fe9929\", \"#ec7014\", \"#cc4c02\", \"#993404\", \"#662506\"], YlGn: [\"#ffffe5\", \"#f7fcb9\", \"#d9f0a3\", \"#addd8e\", \"#78c679\", \"#41ab5d\", \"#238443\", \"#006837\", \"#004529\"], Reds: [\"#fff5f0\", \"#fee0d2\", \"#fcbba1\", \"#fc9272\", \"#fb6a4a\", \"#ef3b2c\", \"#cb181d\", \"#a50f15\", \"#67000d\"], RdPu: [\"#fff7f3\", \"#fde0dd\", \"#fcc5c0\", \"#fa9fb5\", \"#f768a1\", \"#dd3497\", \"#ae017e\", \"#7a0177\", \"#49006a\"], Greens: [\"#f7fcf5\", \"#e5f5e0\", \"#c7e9c0\", \"#a1d99b\", \"#74c476\", \"#41ab5d\", \"#238b45\", \"#006d2c\", \"#00441b\"], YlGnBu: [\"#ffffd9\", \"#edf8b1\", \"#c7e9b4\", \"#7fcdbb\", \"#41b6c4\", \"#1d91c0\", \"#225ea8\", \"#253494\", \"#081d58\"], Purples: [\"#fcfbfd\", \"#efedf5\", \"#dadaeb\", \"#bcbddc\", \"#9e9ac8\", \"#807dba\", \"#6a51a3\", \"#54278f\", \"#3f007d\"], GnBu: [\"#f7fcf0\", \"#e0f3db\", \"#ccebc5\", \"#a8ddb5\", \"#7bccc4\", \"#4eb3d3\", \"#2b8cbe\", \"#0868ac\", \"#084081\"], Greys: [\"#ffffff\", \"#f0f0f0\", \"#d9d9d9\", \"#bdbdbd\", \"#969696\", \"#737373\", \"#525252\", \"#252525\", \"#000000\"], YlOrRd: [\"#ffffcc\", \"#ffeda0\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#fc4e2a\", \"#e31a1c\", \"#bd0026\", \"#800026\"], PuRd: [\"#f7f4f9\", \"#e7e1ef\", \"#d4b9da\", \"#c994c7\", \"#df65b0\", \"#e7298a\", \"#ce1256\", \"#980043\", \"#67001f\"], Blues: [\"#f7fbff\", \"#deebf7\", \"#c6dbef\", \"#9ecae1\", \"#6baed6\", \"#4292c6\", \"#2171b5\", \"#08519c\", \"#08306b\"], PuBuGn: [\"#fff7fb\", \"#ece2f0\", \"#d0d1e6\", \"#a6bddb\", \"#67a9cf\", \"#3690c0\", \"#02818a\", \"#016c59\", \"#014636\"], Spectral: [\"#9e0142\", \"#d53e4f\", \"#f46d43\", \"#fdae61\", \"#fee08b\", \"#ffffbf\", \"#e6f598\", \"#abdda4\", \"#66c2a5\", \"#3288bd\", \"#5e4fa2\"], RdYlGn: [\"#a50026\", \"#d73027\", \"#f46d43\", \"#fdae61\", \"#fee08b\", \"#ffffbf\", \"#d9ef8b\", \"#a6d96a\", \"#66bd63\", \"#1a9850\", \"#006837\"], RdBu: [\"#67001f\", \"#b2182b\", \"#d6604d\", \"#f4a582\", \"#fddbc7\", \"#f7f7f7\", \"#d1e5f0\", \"#92c5de\", \"#4393c3\", \"#2166ac\", \"#053061\"], PiYG: [\"#8e0152\", \"#c51b7d\", \"#de77ae\", \"#f1b6da\", \"#fde0ef\", \"#f7f7f7\", \"#e6f5d0\", \"#b8e186\", \"#7fbc41\", \"#4d9221\", \"#276419\"], PRGn: [\"#40004b\", \"#762a83\", \"#9970ab\", \"#c2a5cf\", \"#e7d4e8\", \"#f7f7f7\", \"#d9f0d3\", \"#a6dba0\", \"#5aae61\", \"#1b7837\", \"#00441b\"], RdYlBu: [\"#a50026\", \"#d73027\", \"#f46d43\", \"#fdae61\", \"#fee090\", \"#ffffbf\", \"#e0f3f8\", \"#abd9e9\", \"#74add1\", \"#4575b4\", \"#313695\"], BrBG: [\"#543005\", \"#8c510a\", \"#bf812d\", \"#dfc27d\", \"#f6e8c3\", \"#f5f5f5\", \"#c7eae5\", \"#80cdc1\", \"#35978f\", \"#01665e\", \"#003c30\"], RdGy: [\"#67001f\", \"#b2182b\", \"#d6604d\", \"#f4a582\", \"#fddbc7\", \"#ffffff\", \"#e0e0e0\", \"#bababa\", \"#878787\", \"#4d4d4d\", \"#1a1a1a\"], PuOr: [\"#7f3b08\", \"#b35806\", \"#e08214\", \"#fdb863\", \"#fee0b6\", \"#f7f7f7\", \"#d8daeb\", \"#b2abd2\", \"#8073ac\", \"#542788\", \"#2d004b\"], Set2: [\"#66c2a5\", \"#fc8d62\", \"#8da0cb\", \"#e78ac3\", \"#a6d854\", \"#ffd92f\", \"#e5c494\", \"#b3b3b3\"], Accent: [\"#7fc97f\", \"#beaed4\", \"#fdc086\", \"#ffff99\", \"#386cb0\", \"#f0027f\", \"#bf5b17\", \"#666666\"], Set1: [\"#e41a1c\", \"#377eb8\", \"#4daf4a\", \"#984ea3\", \"#ff7f00\", \"#ffff33\", \"#a65628\", \"#f781bf\", \"#999999\"], Set3: [\"#8dd3c7\", \"#ffffb3\", \"#bebada\", \"#fb8072\", \"#80b1d3\", \"#fdb462\", \"#b3de69\", \"#fccde5\", \"#d9d9d9\", \"#bc80bd\", \"#ccebc5\", \"#ffed6f\"], Dark2: [\"#1b9e77\", \"#d95f02\", \"#7570b3\", \"#e7298a\", \"#66a61e\", \"#e6ab02\", \"#a6761d\", \"#666666\"], Paired: [\"#a6cee3\", \"#1f78b4\", \"#b2df8a\", \"#33a02c\", \"#fb9a99\", \"#e31a1c\", \"#fdbf6f\", \"#ff7f00\", \"#cab2d6\", \"#6a3d9a\", \"#ffff99\", \"#b15928\"], Pastel2: [\"#b3e2cd\", \"#fdcdac\", \"#cbd5e8\", \"#f4cae4\", \"#e6f5c9\", \"#fff2ae\", \"#f1e2cc\", \"#cccccc\"], Pastel1: [\"#fbb4ae\", \"#b3cde3\", \"#ccebc5\", \"#decbe4\", \"#fed9a6\", \"#ffffcc\", \"#e5d8bd\", \"#fddaec\", \"#f2f2f2\"] }, wa = { indigo: \"#4b0082\", gold: \"#ffd700\", hotpink: \"#ff69b4\", firebrick: \"#b22222\", indianred: \"#cd5c5c\", yellow: \"#ffff00\", mistyrose: \"#ffe4e1\", darkolivegreen: \"#556b2f\", olive: \"#808000\", darkseagreen: \"#8fbc8f\", pink: \"#ffc0cb\", tomato: \"#ff6347\", lightcoral: \"#f08080\", orangered: \"#ff4500\", navajowhite: \"#ffdead\", lime: \"#00ff00\", palegreen: \"#98fb98\", darkslategrey: \"#2f4f4f\", greenyellow: \"#adff2f\", burlywood: \"#deb887\", seashell: \"#fff5ee\", mediumspringgreen: \"#00fa9a\", fuchsia: \"#ff00ff\", papayawhip: \"#ffefd5\", blanchedalmond: \"#ffebcd\", chartreuse: \"#7fff00\", dimgray: \"#696969\", black: \"#000000\", peachpuff: \"#ffdab9\", springgreen: \"#00ff7f\", aquamarine: \"#7fffd4\", white: \"#ffffff\", orange: \"#ffa500\", lightsalmon: \"#ffa07a\", darkslategray: \"#2f4f4f\", brown: \"#a52a2a\", ivory: \"#fffff0\", dodgerblue: \"#1e90ff\", peru: \"#cd853f\", lawngreen: \"#7cfc00\", chocolate: \"#d2691e\", crimson: \"#dc143c\", forestgreen: \"#228b22\", darkgrey: \"#a9a9a9\", lightseagreen: \"#20b2aa\", cyan: \"#00ffff\", mintcream: \"#f5fffa\", silver: \"#c0c0c0\", antiquewhite: \"#faebd7\", mediumorchid: \"#ba55d3\", skyblue: \"#87ceeb\", gray: \"#808080\", darkturquoise: \"#00ced1\", goldenrod: \"#daa520\", darkgreen: \"#006400\", floralwhite: \"#fffaf0\", darkviolet: \"#9400d3\", darkgray: \"#a9a9a9\", moccasin: \"#ffe4b5\", saddlebrown: \"#8b4513\", grey: \"#808080\", darkslateblue: \"#483d8b\", lightskyblue: \"#87cefa\", lightpink: \"#ffb6c1\", mediumvioletred: \"#c71585\", slategrey: \"#708090\", red: \"#ff0000\", deeppink: \"#ff1493\", limegreen: \"#32cd32\", darkmagenta: \"#8b008b\", palegoldenrod: \"#eee8aa\", plum: \"#dda0dd\", turquoise: \"#40e0d0\", lightgrey: \"#d3d3d3\", lightgoldenrodyellow: \"#fafad2\", darkgoldenrod: \"#b8860b\", lavender: \"#e6e6fa\", maroon: \"#800000\", yellowgreen: \"#9acd32\", sandybrown: \"#f4a460\", thistle: \"#d8bfd8\", violet: \"#ee82ee\", navy: \"#000080\", magenta: \"#ff00ff\", dimgrey: \"#696969\", tan: \"#d2b48c\", rosybrown: \"#bc8f8f\", olivedrab: \"#6b8e23\", blue: \"#0000ff\", lightblue: \"#add8e6\", ghostwhite: \"#f8f8ff\", honeydew: \"#f0fff0\", cornflowerblue: \"#6495ed\", slateblue: \"#6a5acd\", linen: \"#faf0e6\", darkblue: \"#00008b\", powderblue: \"#b0e0e6\", seagreen: \"#2e8b57\", darkkhaki: \"#bdb76b\", snow: \"#fffafa\", sienna: \"#a0522d\", mediumblue: \"#0000cd\", royalblue: \"#4169e1\", lightcyan: \"#e0ffff\", green: \"#008000\", mediumpurple: \"#9370db\", midnightblue: \"#191970\", cornsilk: \"#fff8dc\", paleturquoise: \"#afeeee\", bisque: \"#ffe4c4\", slategray: \"#708090\", darkcyan: \"#008b8b\", khaki: \"#f0e68c\", wheat: \"#f5deb3\", teal: \"#008080\", darkorchid: \"#9932cc\", deepskyblue: \"#00bfff\", salmon: \"#fa8072\", darkred: \"#8b0000\", steelblue: \"#4682b4\", palevioletred: \"#db7093\", lightslategray: \"#778899\", aliceblue: \"#f0f8ff\", lightslategrey: \"#778899\", lightgreen: \"#90ee90\", orchid: \"#da70d6\", gainsboro: \"#dcdcdc\", mediumseagreen: \"#3cb371\", lightgray: \"#d3d3d3\", mediumturquoise: \"#48d1cc\", lemonchiffon: \"#fffacd\", cadetblue: \"#5f9ea0\", lightyellow: \"#ffffe0\", lavenderblush: \"#fff0f5\", coral: \"#ff7f50\", purple: \"#800080\", aqua: \"#00ffff\", whitesmoke: \"#f5f5f5\", mediumslateblue: \"#7b68ee\", darkorange: \"#ff8c00\", mediumaquamarine: \"#66cdaa\", darksalmon: \"#e9967a\", beige: \"#f5f5dc\", blueviolet: \"#8a2be2\", azure: \"#f0ffff\", lightsteelblue: \"#b0c4de\", oldlace: \"#fdf5e6\", rebeccapurple: \"#663399\" }, s.colors = v = wa, N = function N() {\n      var a, b, d, e, f, g, h, i, j;return b = va(arguments), f = b[0], a = b[1], d = b[2], i = (f + 16) / 116, h = isNaN(a) ? i : i + a / 500, j = isNaN(d) ? i : i - d / 200, i = c.Yn * O(i), h = c.Xn * O(h), j = c.Zn * O(j), g = ya(3.2404542 * h - 1.5371385 * i - .4985314 * j), e = ya(-.969266 * h + 1.8760108 * i + .041556 * j), d = ya(.0556434 * h - .2040259 * i + 1.0572252 * j), g = S(g, 0, 255), e = S(e, 0, 255), d = S(d, 0, 255), [g, e, d, b.length > 3 ? b[3] : 1];\n   }, ya = function ya(a) {\n      return pa(255 * (.00304 >= a ? 12.92 * a : 1.055 * _(a, 1 / 2.4) - .055));\n   }, O = function O(a) {\n      return a > c.t1 ? a * a * a : c.t2 * (a - c.t0);\n   }, c = { Kn: 18, Xn: .95047, Yn: 1, Zn: 1.08883, t0: .137931034, t1: .206896552, t2: .12841855, t3: .008856452 }, ga = function ga() {\n      var a, b, c, d, e, f, g, h;return d = va(arguments), c = d[0], b = d[1], a = d[2], e = la(c, b, a), f = e[0], g = e[1], h = e[2], [116 * g - 16, 500 * (f - g), 200 * (g - h)];\n   }, ma = function ma(a) {\n      return (a /= 255) <= .04045 ? a / 12.92 : _((a + .055) / 1.055, 2.4);\n   }, xa = function xa(a) {\n      return a > c.t3 ? _(a, 1 / 3) : a / c.t2 + c.t0;\n   }, la = function la() {\n      var a, b, d, e, f, g, h;return e = va(arguments), d = e[0], b = e[1], a = e[2], d = ma(d), b = ma(b), a = ma(a), f = xa((.4124564 * d + .3575761 * b + .1804375 * a) / c.Xn), g = xa((.2126729 * d + .7151522 * b + .072175 * a) / c.Yn), h = xa((.0193339 * d + .119192 * b + .9503041 * a) / c.Zn), [f, g, h];\n   }, s.lab = function () {\n      return function (a, b, c) {\n         c.prototype = a.prototype;var d = new c(),\n             e = a.apply(d, b);return Object(e) === e ? e : d;\n      }(a, za.call(arguments).concat([\"lab\"]), function () {});\n   }, j.lab = N, a.prototype.lab = function () {\n      return ga(this._rgb);\n   }, _n = function n(a) {\n      var b, c, d, e, f, g, h, i, j, k, l;return a = function () {\n         var b, c, d;for (d = [], c = 0, b = a.length; b > c; c++) {\n            e = a[c], d.push(s(e));\n         }return d;\n      }(), 2 === a.length ? (j = function () {\n         var b, c, d;for (d = [], c = 0, b = a.length; b > c; c++) {\n            e = a[c], d.push(e.lab());\n         }return d;\n      }(), f = j[0], g = j[1], b = function b(a) {\n         var b, c;return c = function () {\n            var c, d;for (d = [], b = c = 0; 2 >= c; b = ++c) {\n               d.push(f[b] + a * (g[b] - f[b]));\n            }return d;\n         }(), s.lab.apply(s, c);\n      }) : 3 === a.length ? (k = function () {\n         var b, c, d;for (d = [], c = 0, b = a.length; b > c; c++) {\n            e = a[c], d.push(e.lab());\n         }return d;\n      }(), f = k[0], g = k[1], h = k[2], b = function b(a) {\n         var b, c;return c = function () {\n            var c, d;for (d = [], b = c = 0; 2 >= c; b = ++c) {\n               d.push((1 - a) * (1 - a) * f[b] + 2 * (1 - a) * a * g[b] + a * a * h[b]);\n            }return d;\n         }(), s.lab.apply(s, c);\n      }) : 4 === a.length ? (l = function () {\n         var b, c, d;for (d = [], c = 0, b = a.length; b > c; c++) {\n            e = a[c], d.push(e.lab());\n         }return d;\n      }(), f = l[0], g = l[1], h = l[2], i = l[3], b = function b(a) {\n         var b, c;return c = function () {\n            var c, d;for (d = [], b = c = 0; 2 >= c; b = ++c) {\n               d.push((1 - a) * (1 - a) * (1 - a) * f[b] + 3 * (1 - a) * (1 - a) * a * g[b] + 3 * (1 - a) * a * a * h[b] + a * a * a * i[b]);\n            }return d;\n         }(), s.lab.apply(s, c);\n      }) : 5 === a.length && (c = _n(a.slice(0, 3)), d = _n(a.slice(2, 5)), b = function b(a) {\n         return .5 > a ? c(2 * a) : d(2 * (a - .5));\n      }), b;\n   }, s.bezier = function (a) {\n      var b;return b = _n(a), b.scale = function () {\n         return s.scale(b);\n      }, b;\n   }, s.cubehelix = function (a, b, c, d, e) {\n      var f, h, i;return null == a && (a = 300), null == b && (b = -1.5), null == c && (c = 1), null == d && (d = 1), null == e && (e = [0, 1]), h = e[1] - e[0], f = 0, i = function i(_i) {\n         var j, k, l, m, n, o, p, q, r;return j = g * ((a + 120) / 360 + b * _i), p = _(e[0] + h * _i, d), o = 0 !== f ? c[0] + _i * f : c, k = o * p * (1 - p) / 2, m = w(j), r = ra(j), q = p + k * (-.14861 * m + 1.78277 * r), n = p + k * (-.29227 * m - .90649 * r), l = p + 1.97294 * k * m, s(t([255 * q, 255 * n, 255 * l]));\n      }, i.start = function (b) {\n         return null == b ? a : (a = b, i);\n      }, i.rotations = function (a) {\n         return null == a ? b : (b = a, i);\n      }, i.gamma = function (a) {\n         return null == a ? d : (d = a, i);\n      }, i.hue = function (a) {\n         return null == a ? c : (c = a, \"array\" === ua(c) ? (f = c[1] - c[0], 0 === f && (c = c[1])) : f = 0, i);\n      }, i.lightness = function (a) {\n         return null == a ? e : (e = a, \"array\" === ua(e) ? (h = e[1] - e[0], 0 === h && (e = e[1])) : h = 0, i);\n      }, i.scale = function () {\n         return s.scale(i);\n      }, i.hue(c), i;\n   }, s.random = function () {\n      var b, c, d, e;for (c = \"0123456789abcdef\", b = \"#\", d = e = 0; 6 > e; d = ++e) {\n         b += c.charAt(B(16 * Math.random()));\n      }return new a(b);\n   }, j.rgb = function () {\n      var a, b, c, d;b = va(arguments), c = [];for (a in b) {\n         d = b[a], c.push(d);\n      }return c;\n   }, s.rgb = function () {\n      return function (a, b, c) {\n         c.prototype = a.prototype;var d = new c(),\n             e = a.apply(d, b);return Object(e) === e ? e : d;\n      }(a, za.call(arguments).concat([\"rgb\"]), function () {});\n   }, a.prototype.rgb = function () {\n      return this._rgb.slice(0, 3);\n   }, a.prototype.rgba = function () {\n      return this._rgb;\n   }, h.push({ p: 15, test: function test(a) {\n         var b;return b = va(arguments), \"array\" === ua(b) && 3 === b.length ? \"rgb\" : 4 === b.length && \"number\" === ua(b[3]) && b[3] >= 0 && b[3] <= 1 ? \"rgb\" : void 0;\n      } }), C = function C(a) {\n      var b, c, d, e, f, g;if (a.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) return (4 === a.length || 7 === a.length) && (a = a.substr(1)), 3 === a.length && (a = a.split(\"\"), a = a[0] + a[0] + a[1] + a[1] + a[2] + a[2]), g = parseInt(a, 16), e = g >> 16, d = g >> 8 & 255, c = 255 & g, [e, d, c, 1];if (a.match(/^#?([A-Fa-f0-9]{8})$/)) return 9 === a.length && (a = a.substr(1)), g = parseInt(a, 16), e = g >> 24 & 255, d = g >> 16 & 255, c = g >> 8 & 255, b = pa((255 & g) / 255 * 100) / 100, [e, d, c, b];if (null != j.css && (f = j.css(a))) return f;throw \"unknown color: \" + a;\n   }, ca = function ca(a, b) {\n      var c, d, e, f, g, h, i;return null == b && (b = \"rgb\"), g = a[0], e = a[1], d = a[2], c = a[3], i = g << 16 | e << 8 | d, h = \"000000\" + i.toString(16), h = h.substr(h.length - 6), f = \"0\" + pa(255 * c).toString(16), f = f.substr(f.length - 2), \"#\" + function () {\n         switch (b.toLowerCase()) {case \"rgba\":\n               return h + f;case \"argb\":\n               return f + h;default:\n               return h;}\n      }();\n   }, j.hex = function (a) {\n      return C(a);\n   }, s.hex = function () {\n      return function (a, b, c) {\n         c.prototype = a.prototype;var d = new c(),\n             e = a.apply(d, b);return Object(e) === e ? e : d;\n      }(a, za.call(arguments).concat([\"hex\"]), function () {});\n   }, a.prototype.hex = function (a) {\n      return null == a && (a = \"rgb\"), ca(this._rgb, a);\n   }, h.push({ p: 10, test: function test(a) {\n         return 1 === arguments.length && \"string\" === ua(a) ? \"hex\" : void 0;\n      } }), F = function F() {\n      var a, b, c, d, e, f, g, h, i, j, k, l, m, n;if (a = va(arguments), e = a[0], k = a[1], g = a[2], 0 === k) i = d = b = 255 * g;else {\n         for (n = [0, 0, 0], c = [0, 0, 0], m = .5 > g ? g * (1 + k) : g + k - g * k, l = 2 * g - m, e /= 360, n[0] = e + 1 / 3, n[1] = e, n[2] = e - 1 / 3, f = h = 0; 2 >= h; f = ++h) {\n            n[f] < 0 && (n[f] += 1), n[f] > 1 && (n[f] -= 1), 6 * n[f] < 1 ? c[f] = l + 6 * (m - l) * n[f] : 2 * n[f] < 1 ? c[f] = m : 3 * n[f] < 2 ? c[f] = l + (m - l) * (2 / 3 - n[f]) * 6 : c[f] = l;\n         }j = [pa(255 * c[0]), pa(255 * c[1]), pa(255 * c[2])], i = j[0], d = j[1], b = j[2];\n      }return a.length > 3 ? [i, d, b, a[3]] : [i, d, b];\n   }, ea = function ea(a, b, c) {\n      var d, e, f, g, h;return void 0 !== a && a.length >= 3 && (g = a, a = g[0], b = g[1], c = g[2]), a /= 255, b /= 255, c /= 255, f = Math.min(a, b, c), W = Math.max(a, b, c), e = (W + f) / 2, W === f ? (h = 0, d = Number.NaN) : h = .5 > e ? (W - f) / (W + f) : (W - f) / (2 - W - f), a === W ? d = (b - c) / (W - f) : b === W ? d = 2 + (c - a) / (W - f) : c === W && (d = 4 + (a - b) / (W - f)), d *= 60, 0 > d && (d += 360), [d, h, e];\n   }, s.hsl = function () {\n      return function (a, b, c) {\n         c.prototype = a.prototype;var d = new c(),\n             e = a.apply(d, b);return Object(e) === e ? e : d;\n      }(a, za.call(arguments).concat([\"hsl\"]), function () {});\n   }, j.hsl = F, a.prototype.hsl = function () {\n      return ea(this._rgb);\n   }, G = function G() {\n      var a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r;if (a = va(arguments), e = a[0], p = a[1], r = a[2], r *= 255, 0 === p) i = d = b = r;else switch (360 === e && (e = 0), e > 360 && (e -= 360), 0 > e && (e += 360), e /= 60, f = B(e), c = e - f, g = r * (1 - p), h = r * (1 - p * c), q = r * (1 - p * (1 - c)), f) {case 0:\n            j = [r, q, g], i = j[0], d = j[1], b = j[2];break;case 1:\n            k = [h, r, g], i = k[0], d = k[1], b = k[2];break;case 2:\n            l = [g, r, q], i = l[0], d = l[1], b = l[2];break;case 3:\n            m = [g, h, r], i = m[0], d = m[1], b = m[2];break;case 4:\n            n = [q, g, r], i = n[0], d = n[1], b = n[2];break;case 5:\n            o = [r, g, h], i = o[0], d = o[1], b = o[2];}return i = pa(i), d = pa(d), b = pa(b), [i, d, b, a.length > 3 ? a[3] : 1];\n   }, fa = function fa() {\n      var a, b, c, d, e, f, g, h, i;return g = va(arguments), f = g[0], c = g[1], a = g[2], e = Math.min(f, c, a), W = Math.max(f, c, a), b = W - e, i = W / 255, 0 === W ? (d = Number.NaN, h = 0) : (h = b / W, f === W && (d = (c - a) / b), c === W && (d = 2 + (a - f) / b), a === W && (d = 4 + (f - c) / b), d *= 60, 0 > d && (d += 360)), [d, h, i];\n   }, s.hsv = function () {\n      return function (a, b, c) {\n         c.prototype = a.prototype;var d = new c(),\n             e = a.apply(d, b);return Object(e) === e ? e : d;\n      }(a, za.call(arguments).concat([\"hsv\"]), function () {});\n   }, j.hsv = G, a.prototype.hsv = function () {\n      return fa(this._rgb);\n   }, Z = function Z(a) {\n      var b, c, d;return \"number\" === ua(a) && a >= 0 && 16777215 >= a ? (d = a >> 16, c = a >> 8 & 255, b = 255 & a, [d, c, b, 1]) : (console.warn(\"unknown num color: \" + a), [0, 0, 0, 1]);\n   }, ja = function ja() {\n      var a, b, c, d;return d = va(arguments), c = d[0], b = d[1], a = d[2], (c << 16) + (b << 8) + a;\n   }, s.num = function (b) {\n      return new a(b, \"num\");\n   }, a.prototype.num = function (a) {\n      return null == a && (a = \"rgb\"), ja(this._rgb, a);\n   }, j.num = Z, h.push({ p: 10, test: function test(a) {\n         return 1 === arguments.length && \"number\" === ua(a) && a >= 0 && 16777215 >= a ? \"num\" : void 0;\n      } }), x = function x(a) {\n      var b, c, d, e, f, g, h, i;if (a = a.toLowerCase(), null != s.colors && s.colors[a]) return C(s.colors[a]);if (f = a.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n         for (h = f.slice(1, 4), e = g = 0; 2 >= g; e = ++g) {\n            h[e] = +h[e];\n         }h[3] = 1;\n      } else if (f = a.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) for (h = f.slice(1, 5), e = i = 0; 3 >= i; e = ++i) {\n         h[e] = +h[e];\n      } else if (f = a.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n         for (h = f.slice(1, 4), e = b = 0; 2 >= b; e = ++b) {\n            h[e] = pa(2.55 * h[e]);\n         }h[3] = 1;\n      } else if (f = a.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n         for (h = f.slice(1, 5), e = c = 0; 2 >= c; e = ++c) {\n            h[e] = pa(2.55 * h[e]);\n         }h[3] = +h[3];\n      } else (f = a.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) ? (d = f.slice(1, 4), d[1] *= .01, d[2] *= .01, h = F(d), h[3] = 1) : (f = a.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) && (d = f.slice(1, 4), d[1] *= .01, d[2] *= .01, h = F(d), h[3] = +f[4]);return h;\n   }, ba = function ba(a) {\n      var b;return b = a[3] < 1 ? \"rgba\" : \"rgb\", \"rgb\" === b ? b + \"(\" + a.slice(0, 3).map(pa).join(\",\") + \")\" : \"rgba\" === b ? b + \"(\" + a.slice(0, 3).map(pa).join(\",\") + \",\" + a[3] + \")\" : void 0;\n   }, na = function na(a) {\n      return pa(100 * a) / 100;\n   }, E = function E(a, b) {\n      var c;return c = 1 > b ? \"hsla\" : \"hsl\", a[0] = na(a[0] || 0), a[1] = na(100 * a[1]) + \"%\", a[2] = na(100 * a[2]) + \"%\", \"hsla\" === c && (a[3] = b), c + \"(\" + a.join(\",\") + \")\";\n   }, j.css = function (a) {\n      return x(a);\n   }, s.css = function () {\n      return function (a, b, c) {\n         c.prototype = a.prototype;var d = new c(),\n             e = a.apply(d, b);return Object(e) === e ? e : d;\n      }(a, za.call(arguments).concat([\"css\"]), function () {});\n   }, a.prototype.css = function (a) {\n      return null == a && (a = \"rgb\"), \"rgb\" === a.slice(0, 3) ? ba(this._rgb) : \"hsl\" === a.slice(0, 3) ? E(this.hsl(), this.alpha()) : void 0;\n   }, j.named = function (a) {\n      return C(wa[a]);\n   }, h.push({ p: 20, test: function test(a) {\n         return 1 === arguments.length && null != wa[a] ? \"named\" : void 0;\n      } }), a.prototype.name = function (a) {\n      var b, c;arguments.length && (wa[a] && (this._rgb = C(wa[a])), this._rgb[3] = 1), b = this.hex();for (c in wa) {\n         if (b === wa[c]) return c;\n      }return b;\n   }, P = function P() {\n      var a, c, d, e;return e = va(arguments), d = e[0], a = e[1], c = e[2], c *= b, [d, w(c) * a, ra(c) * a];\n   }, Q = function Q() {\n      var a, b, c, d, e, f, g, h, i, j, k;return c = va(arguments), h = c[0], e = c[1], g = c[2], j = P(h, e, g), a = j[0], b = j[1], d = j[2], k = N(a, b, d), i = k[0], f = k[1], d = k[2], [S(i, 0, 255), S(f, 0, 255), S(d, 0, 255), c.length > 3 ? c[3] : 1];\n   }, M = function M() {\n      var a, b, c, d, e, g;return g = va(arguments), e = g[0], a = g[1], b = g[2], c = sa(a * a + b * b), d = (m(b, a) * f + 360) % 360, 0 === pa(1e4 * c) && (d = Number.NaN), [e, c, d];\n   }, ha = function ha() {\n      var a, b, c, d, e, f, g;return f = va(arguments), e = f[0], c = f[1], b = f[2], g = ga(e, c, b), d = g[0], a = g[1], b = g[2], M(d, a, b);\n   }, s.lch = function () {\n      var b;return b = va(arguments), new a(b, \"lch\");\n   }, s.hcl = function () {\n      var b;return b = va(arguments), new a(b, \"hcl\");\n   }, j.lch = Q, j.hcl = function () {\n      var a, b, c, d;return d = va(arguments), b = d[0], a = d[1], c = d[2], Q([c, a, b]);\n   }, a.prototype.lch = function () {\n      return ha(this._rgb);\n   }, a.prototype.hcl = function () {\n      return ha(this._rgb).reverse();\n   }, aa = function aa(a) {\n      var b, c, d, e, f, g, h, i, j;return null == a && (a = \"rgb\"), i = va(arguments), h = i[0], e = i[1], b = i[2], h /= 255, e /= 255, b /= 255, f = 1 - Math.max(h, Math.max(e, b)), d = 1 > f ? 1 / (1 - f) : 0, c = (1 - h - f) * d, g = (1 - e - f) * d, j = (1 - b - f) * d, [c, g, j, f];\n   }, u = function u() {\n      var a, b, c, d, e, f, g, h, i;return b = va(arguments), d = b[0], g = b[1], i = b[2], f = b[3], a = b.length > 4 ? b[4] : 1, 1 === f ? [0, 0, 0, a] : (h = d >= 1 ? 0 : pa(255 * (1 - d) * (1 - f)), e = g >= 1 ? 0 : pa(255 * (1 - g) * (1 - f)), c = i >= 1 ? 0 : pa(255 * (1 - i) * (1 - f)), [h, e, c, a]);\n   }, j.cmyk = function () {\n      return u(va(arguments));\n   }, s.cmyk = function () {\n      return function (a, b, c) {\n         c.prototype = a.prototype;var d = new c(),\n             e = a.apply(d, b);return Object(e) === e ? e : d;\n      }(a, za.call(arguments).concat([\"cmyk\"]), function () {});\n   }, a.prototype.cmyk = function () {\n      return aa(this._rgb);\n   }, j.gl = function () {\n      var a, b, c, d, e;for (d = function () {\n         var a, c;a = va(arguments), c = [];for (b in a) {\n            e = a[b], c.push(e);\n         }return c;\n      }.apply(this, arguments), a = c = 0; 2 >= c; a = ++c) {\n         d[a] *= 255;\n      }return d;\n   }, s.gl = function () {\n      return function (a, b, c) {\n         c.prototype = a.prototype;var d = new c(),\n             e = a.apply(d, b);return Object(e) === e ? e : d;\n      }(a, za.call(arguments).concat([\"gl\"]), function () {});\n   }, a.prototype.gl = function () {\n      var a;return a = this._rgb, [a[0] / 255, a[1] / 255, a[2] / 255, a[3]];\n   }, ia = function ia(a, b, c) {\n      var d;return d = va(arguments), a = d[0], b = d[1], c = d[2], a = U(a), b = U(b), c = U(c), .2126 * a + .7152 * b + .0722 * c;\n   }, U = function U(a) {\n      return a /= 255, .03928 >= a ? a / 12.92 : _((a + .055) / 1.055, 2.4);\n   }, k = [], H = function H(a, b, c, d) {\n      var e, f, g, h;for (null == c && (c = .5), null == d && (d = \"rgb\"), \"object\" !== ua(a) && (a = s(a)), \"object\" !== ua(b) && (b = s(b)), g = 0, f = k.length; f > g; g++) {\n         if (e = k[g], d === e[0]) {\n            h = e[1](a, b, c, d);break;\n         }\n      }if (null == h) throw \"color mode \" + d + \" is not supported\";return h.alpha(a.alpha() + c * (b.alpha() - a.alpha())), h;\n   }, s.interpolate = H, a.prototype.interpolate = function (a, b, c) {\n      return H(this, a, b, c);\n   }, s.mix = H, a.prototype.mix = a.prototype.interpolate, L = function L(b, c, d, e) {\n      var f, g;return f = b._rgb, g = c._rgb, new a(f[0] + d * (g[0] - f[0]), f[1] + d * (g[1] - f[1]), f[2] + d * (g[2] - f[2]), e);\n   }, k.push([\"rgb\", L]), a.prototype.luminance = function (a, b) {\n      var c, d, e, _f;return null == b && (b = \"rgb\"), arguments.length ? (0 === a ? this._rgb = [0, 0, 0, this._rgb[3]] : 1 === a ? this._rgb = [255, 255, 255, this._rgb[3]] : (d = 1e-7, e = 20, _f = function f(c, g) {\n         var h, i;return i = c.interpolate(g, .5, b), h = i.luminance(), Math.abs(a - h) < d || !e-- ? i : h > a ? _f(c, i) : _f(i, g);\n      }, c = ia(this._rgb), this._rgb = (c > a ? _f(s(\"black\"), this) : _f(this, s(\"white\"))).rgba()), this) : ia(this._rgb);\n   }, ta = function ta(a) {\n      var b, c, d, e;return e = a / 100, 66 > e ? (d = 255, c = -155.25485562709179 - .44596950469579133 * (c = e - 2) + 104.49216199393888 * T(c), b = 20 > e ? 0 : -254.76935184120902 + .8274096064007395 * (b = e - 10) + 115.67994401066147 * T(b)) : (d = 351.97690566805693 + .114206453784165 * (d = e - 55) - 40.25366309332127 * T(d), c = 325.4494125711974 + .07943456536662342 * (c = e - 50) - 28.0852963507957 * T(c), b = 255), t([d, c, b]);\n   }, ka = function ka() {\n      var a, b, c, d, e, f, g, h, i;for (g = va(arguments), f = g[0], c = g[1], a = g[2], e = 1e3, d = 4e4, b = .4; d - e > b;) {\n         i = .5 * (d + e), h = ta(i), h[2] / h[0] >= a / f ? d = i : e = i;\n      }return pa(i);\n   }, s.temperature = s.kelvin = function () {\n      return function (a, b, c) {\n         c.prototype = a.prototype;var d = new c(),\n             e = a.apply(d, b);return Object(e) === e ? e : d;\n      }(a, za.call(arguments).concat([\"temperature\"]), function () {});\n   }, j.temperature = j.kelvin = j.K = ta, a.prototype.temperature = function () {\n      return ka(this._rgb);\n   }, a.prototype.kelvin = a.prototype.temperature, s.contrast = function (b, c) {\n      var d, e, f, g;return (\"string\" === (f = ua(b)) || \"number\" === f) && (b = new a(b)), (\"string\" === (g = ua(c)) || \"number\" === g) && (c = new a(c)), d = b.luminance(), e = c.luminance(), d > e ? (d + .05) / (e + .05) : (e + .05) / (d + .05);\n   }, a.prototype.get = function (a) {\n      var b, c, d, e, f, g;return d = this, f = a.split(\".\"), e = f[0], b = f[1], g = d[e](), b ? (c = e.indexOf(b), c > -1 ? g[c] : console.warn(\"unknown channel \" + b + \" in mode \" + e)) : g;\n   }, a.prototype.set = function (a, b) {\n      var c, d, e, f, g, h;if (e = this, g = a.split(\".\"), f = g[0], c = g[1], c) {\n         if (h = e[f](), d = f.indexOf(c), d > -1) {\n            if (\"string\" === ua(b)) switch (b.charAt(0)) {case \"+\":\n                  h[d] += +b;break;case \"-\":\n                  h[d] += +b;break;case \"*\":\n                  h[d] *= +b.substr(1);break;case \"/\":\n                  h[d] /= +b.substr(1);break;default:\n                  h[d] = +b;} else h[d] = b;\n         } else console.warn(\"unknown channel \" + c + \" in mode \" + f);\n      } else h = b;return e._rgb = s(h, f).alpha(e.alpha())._rgb, e;\n   }, a.prototype.darken = function (a) {\n      var b, d;return null == a && (a = 1), d = this, b = d.lab(), b[0] -= c.Kn * a, s.lab(b).alpha(d.alpha());\n   }, a.prototype.brighten = function (a) {\n      return null == a && (a = 1), this.darken(-a);\n   }, a.prototype.darker = a.prototype.darken, a.prototype.brighter = a.prototype.brighten, a.prototype.saturate = function (a) {\n      var b, d;return null == a && (a = 1), d = this, b = d.lch(), b[1] += a * c.Kn, b[1] < 0 && (b[1] = 0), s.lch(b).alpha(d.alpha());\n   }, a.prototype.desaturate = function (a) {\n      return null == a && (a = 1), this.saturate(-a);\n   }, a.prototype.premultiply = function () {\n      var a, b;return b = this.rgb(), a = this.alpha(), s(b[0] * a, b[1] * a, b[2] * a, a);\n   }, _o = function o(a, b, c) {\n      if (!_o[c]) throw \"unknown blend mode \" + c;return _o[c](a, b);\n   }, p = function p(a) {\n      return function (b, c) {\n         var d, e;return d = s(c).rgb(), e = s(b).rgb(), s(a(d, e), \"rgb\");\n      };\n   }, A = function A(a) {\n      return function (b, c) {\n         var d, e, f;for (f = [], d = e = 0; 3 >= e; d = ++e) {\n            f[d] = a(b[d], c[d]);\n         }return f;\n      };\n   }, Y = function Y(a, b) {\n      return a;\n   }, X = function X(a, b) {\n      return a * b / 255;\n   }, y = function y(a, b) {\n      return a > b ? b : a;\n   }, R = function R(a, b) {\n      return a > b ? a : b;\n   }, qa = function qa(a, b) {\n      return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n   }, $ = function $(a, b) {\n      return 128 > b ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n   }, r = function r(a, b) {\n      return 255 * (1 - (1 - b / 255) / (a / 255));\n   }, z = function z(a, b) {\n      return 255 === a ? 255 : (a = 255 * (b / 255) / (1 - a / 255), a > 255 ? 255 : a);\n   }, _o.normal = p(A(Y)), _o.multiply = p(A(X)), _o.screen = p(A(qa)), _o.overlay = p(A($)), _o.darken = p(A(y)), _o.lighten = p(A(R)), _o.dodge = p(A(z)), _o.burn = p(A(r)), s.blend = _o, s.analyze = function (a) {\n      var b, c, d, e;for (d = { min: Number.MAX_VALUE, max: -1 * Number.MAX_VALUE, sum: 0, values: [], count: 0 }, c = 0, b = a.length; b > c; c++) {\n         e = a[c], null == e || isNaN(e) || (d.values.push(e), d.sum += e, e < d.min && (d.min = e), e > d.max && (d.max = e), d.count += 1);\n      }return d.domain = [d.min, d.max], d.limits = function (a, b) {\n         return s.limits(d, a, b);\n      }, d;\n   }, s.scale = function (a, b) {\n      var c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, t, u, v, w, x;return k = \"rgb\", l = s(\"#ccc\"), p = 0, h = !1, g = [0, 1], o = [], n = [0, 0], c = !1, e = [], m = !1, j = 0, i = 1, f = !1, d = {}, w = function w(a) {\n         var b, c, d, f, g, h, i;if (null == a && (a = [\"#fff\", \"#000\"]), null != a && \"string\" === ua(a) && null != (null != (f = s.brewer) ? f[a] : void 0) && (a = s.brewer[a]), \"array\" === ua(a)) {\n            for (a = a.slice(0), b = d = 0, g = a.length - 1; g >= 0 ? g >= d : d >= g; b = g >= 0 ? ++d : --d) {\n               c = a[b], \"string\" === ua(c) && (a[b] = s(c));\n            }for (o.length = 0, b = i = 0, h = a.length - 1; h >= 0 ? h >= i : i >= h; b = h >= 0 ? ++i : --i) {\n               o.push(b / (a.length - 1));\n            }\n         }return v(), e = a;\n      }, t = function t(a) {\n         var b, d;if (null != c) {\n            for (d = c.length - 1, b = 0; d > b && a >= c[b];) {\n               b++;\n            }return b - 1;\n         }return 0;\n      }, x = function x(a) {\n         return a;\n      }, q = function q(a) {\n         var b, d, e, f, g;return g = a, c.length > 2 && (f = c.length - 1, b = t(a), e = c[0] + (c[1] - c[0]) * (0 + .5 * p), d = c[f - 1] + (c[f] - c[f - 1]) * (1 - .5 * p), g = j + (c[b] + .5 * (c[b + 1] - c[b]) - e) / (d - e) * (i - j)), g;\n      }, u = function u(a, b) {\n         var f, g, h, m, p, q, r, u;if (null == b && (b = !1), isNaN(a)) return l;if (b ? u = a : c && c.length > 2 ? (f = t(a), u = f / (c.length - 2), u = n[0] + u * (1 - n[0] - n[1])) : i !== j ? (u = (a - j) / (i - j), u = n[0] + u * (1 - n[0] - n[1]), u = Math.min(1, Math.max(0, u))) : u = 1, b || (u = x(u)), m = Math.floor(1e4 * u), d[m]) g = d[m];else {\n            if (\"array\" === ua(e)) for (h = p = 0, r = o.length - 1; r >= 0 ? r >= p : p >= r; h = r >= 0 ? ++p : --p) {\n               if (q = o[h], q >= u) {\n                  g = e[h];break;\n               }if (u >= q && h === o.length - 1) {\n                  g = e[h];break;\n               }if (u > q && u < o[h + 1]) {\n                  u = (u - q) / (o[h + 1] - q), g = s.interpolate(e[h], e[h + 1], u, k);break;\n               }\n            } else \"function\" === ua(e) && (g = e(u));d[m] = g;\n         }return g;\n      }, v = function v() {\n         return d = {};\n      }, w(a), r = function r(a) {\n         var b;return b = s(u(a)), m && b[m] ? b[m]() : b;\n      }, r.classes = function (a) {\n         var b;return null != a ? (\"array\" === ua(a) ? (c = a, g = [a[0], a[a.length - 1]]) : (b = s.analyze(g), c = 0 === a ? [b.min, b.max] : s.limits(b, \"e\", a)), r) : c;\n      }, r.domain = function (a) {\n         var b, c, d, f, h, k, l;if (!arguments.length) return g;if (j = a[0], i = a[a.length - 1], o = [], d = e.length, a.length === d && j !== i) for (h = 0, f = a.length; f > h; h++) {\n            c = a[h], o.push((c - j) / (i - j));\n         } else for (b = l = 0, k = d - 1; k >= 0 ? k >= l : l >= k; b = k >= 0 ? ++l : --l) {\n            o.push(b / (d - 1));\n         }return g = [j, i], r;\n      }, r.mode = function (a) {\n         return arguments.length ? (k = a, v(), r) : k;\n      }, r.range = function (a, b) {\n         return w(a, b), r;\n      }, r.out = function (a) {\n         return m = a, r;\n      }, r.spread = function (a) {\n         return arguments.length ? (p = a, r) : p;\n      }, r.correctLightness = function (a) {\n         return null == a && (a = !0), f = a, v(), x = f ? function (a) {\n            var b, c, d, e, f, g, h, i, j;for (b = u(0, !0).lab()[0], c = u(1, !0).lab()[0], h = b > c, d = u(a, !0).lab()[0], f = b + (c - b) * a, e = d - f, i = 0, j = 1, g = 20; Math.abs(e) > .01 && g-- > 0;) {\n               !function () {\n                  return h && (e *= -1), 0 > e ? (i = a, a += .5 * (j - a)) : (j = a, a += .5 * (i - a)), d = u(a, !0).lab()[0], e = d - f;\n               }();\n            }return a;\n         } : function (a) {\n            return a;\n         }, r;\n      }, r.padding = function (a) {\n         return null != a ? (\"number\" === ua(a) && (a = [a, a]), n = a, r) : n;\n      }, r.colors = function () {\n         var b, d, e, f, h, i, j, k, l;if (f = 0, h = \"hex\", 1 === arguments.length && (\"string\" === ua(arguments[0]) ? h = arguments[0] : f = arguments[0]), 2 === arguments.length && (f = arguments[0], h = arguments[1]), f) return d = g[0], b = g[1] - d, function () {\n            j = [];for (var a = 0; f >= 0 ? f > a : a > f; f >= 0 ? a++ : a--) {\n               j.push(a);\n            }return j;\n         }.apply(this).map(function (a) {\n            return r(d + a / (f - 1) * b)[h]();\n         });if (a = [], k = [], c && c.length > 2) for (e = l = 1, i = c.length; i >= 1 ? i > l : l > i; e = i >= 1 ? ++l : --l) {\n            k.push(.5 * (c[e - 1] + c[e]));\n         } else k = g;return k.map(function (a) {\n            return r(a)[h]();\n         });\n      }, r;\n   }, null == s.scales && (s.scales = {}), s.scales.cool = function () {\n      return s.scale([s.hsl(180, 1, .9), s.hsl(250, .7, .4)]);\n   }, s.scales.hot = function () {\n      return s.scale([\"#000\", \"#f00\", \"#ff0\", \"#fff\"], [0, .25, .75, 1]).mode(\"rgb\");\n   }, s.analyze = function (a, b, c) {\n      var d, e, f, g, h, i, j;if (h = { min: Number.MAX_VALUE, max: -1 * Number.MAX_VALUE, sum: 0, values: [], count: 0 }, null == c && (c = function c() {\n         return !0;\n      }), d = function d(a) {\n         null == a || isNaN(a) || (h.values.push(a), h.sum += a, a < h.min && (h.min = a), a > h.max && (h.max = a), h.count += 1);\n      }, j = function j(a, e) {\n         return c(a, e) ? d(null != b && \"function\" === ua(b) ? b(a) : null != b && \"string\" === ua(b) || \"number\" === ua(b) ? a[b] : a) : void 0;\n      }, \"array\" === ua(a)) for (g = 0, f = a.length; f > g; g++) {\n         i = a[g], j(i);\n      } else for (e in a) {\n         i = a[e], j(i, e);\n      }return h.domain = [h.min, h.max], h.limits = function (a, b) {\n         return s.limits(h, a, b);\n      }, h;\n   }, s.limits = function (a, b, c) {\n      var d, e, f, g, h, i, j, k, m, n, o, p, q, r, t, u, v, w, x, y, z, A, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, U, V, X, Y, Z, $, aa, ba, ca, da, ea, fa, ga, ha, ia, ja;if (null == b && (b = \"equal\"), null == c && (c = 7), \"array\" === ua(a) && (a = s.analyze(a)), E = a.min, W = a.max, fa = a.sum, ia = a.values.sort(function (a, b) {\n         return a - b;\n      }), C = [], \"c\" === b.substr(0, 1) && (C.push(E), C.push(W)), \"e\" === b.substr(0, 1)) {\n         for (C.push(E), y = K = 1, O = c - 1; O >= 1 ? O >= K : K >= O; y = O >= 1 ? ++K : --K) {\n            C.push(E + y / c * (W - E));\n         }C.push(W);\n      } else if (\"l\" === b.substr(0, 1)) {\n         if (0 >= E) throw \"Logarithmic scales are only possible for values > 0\";for (F = Math.LOG10E * T(E), D = Math.LOG10E * T(W), C.push(E), y = ja = 1, P = c - 1; P >= 1 ? P >= ja : ja >= P; y = P >= 1 ? ++ja : --ja) {\n            C.push(_(10, F + y / c * (D - F)));\n         }C.push(W);\n      } else if (\"q\" === b.substr(0, 1)) {\n         for (C.push(E), y = d = 1, X = c - 1; X >= 1 ? X >= d : d >= X; y = X >= 1 ? ++d : --d) {\n            L = ia.length * y / c, M = B(L), M === L ? C.push(ia[M]) : (N = L - M, C.push(ia[M] * N + ia[M + 1] * (1 - N)));\n         }C.push(W);\n      } else if (\"k\" === b.substr(0, 1)) {\n         for (H = ia.length, r = new Array(H), w = new Array(c), ea = !0, I = 0, u = null, u = [], u.push(E), y = e = 1, Y = c - 1; Y >= 1 ? Y >= e : e >= Y; y = Y >= 1 ? ++e : --e) {\n            u.push(E + y / c * (W - E));\n         }for (u.push(W); ea;) {\n            for (z = f = 0, Z = c - 1; Z >= 0 ? Z >= f : f >= Z; z = Z >= 0 ? ++f : --f) {\n               w[z] = 0;\n            }for (y = g = 0, $ = H - 1; $ >= 0 ? $ >= g : g >= $; y = $ >= 0 ? ++g : --g) {\n               for (ha = ia[y], G = Number.MAX_VALUE, z = h = 0, aa = c - 1; aa >= 0 ? aa >= h : h >= aa; z = aa >= 0 ? ++h : --h) {\n                  x = l(u[z] - ha), G > x && (G = x, t = z);\n               }w[t]++, r[y] = t;\n            }for (J = new Array(c), z = i = 0, ba = c - 1; ba >= 0 ? ba >= i : i >= ba; z = ba >= 0 ? ++i : --i) {\n               J[z] = null;\n            }for (y = j = 0, ca = H - 1; ca >= 0 ? ca >= j : j >= ca; y = ca >= 0 ? ++j : --j) {\n               v = r[y], null === J[v] ? J[v] = ia[y] : J[v] += ia[y];\n            }for (z = k = 0, da = c - 1; da >= 0 ? da >= k : k >= da; z = da >= 0 ? ++k : --k) {\n               J[z] *= 1 / w[z];\n            }for (ea = !1, z = m = 0, Q = c - 1; Q >= 0 ? Q >= m : m >= Q; z = Q >= 0 ? ++m : --m) {\n               if (J[z] !== u[y]) {\n                  ea = !0;break;\n               }\n            }u = J, I++, I > 200 && (ea = !1);\n         }for (A = {}, z = n = 0, R = c - 1; R >= 0 ? R >= n : n >= R; z = R >= 0 ? ++n : --n) {\n            A[z] = [];\n         }for (y = o = 0, S = H - 1; S >= 0 ? S >= o : o >= S; y = S >= 0 ? ++o : --o) {\n            v = r[y], A[v].push(ia[y]);\n         }for (ga = [], z = p = 0, U = c - 1; U >= 0 ? U >= p : p >= U; z = U >= 0 ? ++p : --p) {\n            ga.push(A[z][0]), ga.push(A[z][A[z].length - 1]);\n         }for (ga = ga.sort(function (a, b) {\n            return a - b;\n         }), C.push(ga[0]), y = q = 1, V = ga.length - 1; V >= q; y = q += 2) {\n            isNaN(ga[y]) || C.push(ga[y]);\n         }\n      }return C;\n   }, D = function D(a, b, c) {\n      var d, f, h, i;return d = va(arguments), a = d[0], b = d[1], c = d[2], a /= 360, 1 / 3 > a ? (f = (1 - b) / 3, i = (1 + b * w(g * a) / w(e - g * a)) / 3, h = 1 - (f + i)) : 2 / 3 > a ? (a -= 1 / 3, i = (1 - b) / 3, h = (1 + b * w(g * a) / w(e - g * a)) / 3, f = 1 - (i + h)) : (a -= 2 / 3, h = (1 - b) / 3, f = (1 + b * w(g * a) / w(e - g * a)) / 3, i = 1 - (h + f)), i = S(c * i * 3), h = S(c * h * 3), f = S(c * f * 3), [255 * i, 255 * h, 255 * f, d.length > 3 ? d[3] : 1];\n   }, da = function da() {\n      var a, b, c, d, e, f, h, i;return h = va(arguments), f = h[0], b = h[1], a = h[2], g = 2 * Math.PI, f /= 255, b /= 255, a /= 255, e = Math.min(f, b, a), d = (f + b + a) / 3, i = 1 - e / d, 0 === i ? c = 0 : (c = (f - b + (f - a)) / 2, c /= Math.sqrt((f - b) * (f - b) + (f - a) * (b - a)), c = Math.acos(c), a > b && (c = g - c), c /= g), [360 * c, i, d];\n   }, s.hsi = function () {\n      return function (a, b, c) {\n         c.prototype = a.prototype;var d = new c(),\n             e = a.apply(d, b);return Object(e) === e ? e : d;\n      }(a, za.call(arguments).concat([\"hsi\"]), function () {});\n   }, j.hsi = D, a.prototype.hsi = function () {\n      return da(this._rgb);\n   }, I = function I(a, b, c, d) {\n      var e, f, g, h, i, j, k, l, m, n, o, p, q;return \"hsl\" === d ? (p = a.hsl(), q = b.hsl()) : \"hsv\" === d ? (p = a.hsv(), q = b.hsv()) : \"hsi\" === d ? (p = a.hsi(), q = b.hsi()) : (\"lch\" === d || \"hcl\" === d) && (d = \"hcl\", p = a.hcl(), q = b.hcl()), \"h\" === d.substr(0, 1) && (g = p[0], n = p[1], j = p[2], h = q[0], o = q[1], k = q[2]), isNaN(g) || isNaN(h) ? isNaN(g) ? isNaN(h) ? f = Number.NaN : (f = h, 1 !== j && 0 !== j || \"hsv\" === d || (m = o)) : (f = g, 1 !== k && 0 !== k || \"hsv\" === d || (m = n)) : (e = h > g && h - g > 180 ? h - (g + 360) : g > h && g - h > 180 ? h + 360 - g : h - g, f = g + c * e), null == m && (m = n + c * (o - n)), i = j + c * (k - j), l = s[d](f, m, i);\n   }, k = k.concat(function () {\n      var a, b, c, d;for (c = [\"hsv\", \"hsl\", \"hsi\", \"hcl\", \"lch\"], d = [], b = 0, a = c.length; a > b; b++) {\n         V = c[b], d.push([V, I]);\n      }return d;\n   }()), K = function K(a, b, c, d) {\n      var e, f;return e = a.num(), f = b.num(), s.num(e + (f - e) * c, \"num\");\n   }, k.push([\"num\", K]), J = function J(b, c, d, e) {\n      var f, g, h;return g = b.lab(), h = c.lab(), f = new a(g[0] + d * (h[0] - g[0]), g[1] + d * (h[1] - g[1]), g[2] + d * (h[2] - g[2]), e);\n   }, k.push([\"lab\", J]);\n}).call(undefined);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../~/webpack/buildin/module.js */ 10)(module)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 8 */
/* unknown exports provided */
/* all exports used */
/*!***************************!*\
  !*** ./src/lib/earcut.js ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, size;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and size are later used to transform coords into integers for z-order calculation\n        size = Math.max(maxX - minX, maxY - minY);\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, size);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === signedArea(data, start, end, dim) > 0) {\n        for (i = start; i < end; i += dim) {\n            last = insertNode(i, data[i], data[i + 1], last);\n        }\n    } else {\n        for (i = end - dim; i >= start; i -= dim) {\n            last = insertNode(i, data[i], data[i + 1], last);\n        }\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) return null;\n            again = true;\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, size, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && size) indexCurve(ear, minX, minY, size);\n\n    var stop = ear,\n        prev,\n        next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (size ? isEarHashed(ear, minX, minY, size) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, size, 1);\n\n                // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, size, 2);\n\n                // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, size);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, size) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n        minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n        maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n        maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y;\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, size),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, size);\n\n    // first look for points inside the triangle in increasing z-order\n    var p = ear.nextZ;\n\n    while (p && p.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.nextZ;\n    }\n\n    // then look for points in decreasing z-order\n    p = ear.prevZ;\n\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, size) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, size);\n                earcutLinked(c, triangles, dim, minX, minY, size);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i,\n        len,\n        start,\n        end,\n        list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || tan === tanMin && p.x > m.x) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, size) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, size);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i,\n        p,\n        q,\n        e,\n        tail,\n        numMerges,\n        pSize,\n        qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n\n            qSize = inSize;\n\n            while (pSize > 0 || qSize > 0 && q) {\n\n                if (pSize === 0) {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                } else if (qSize === 0 || !q) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else if (p.z <= q.z) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and size of the data bounding box\nfunction zOrder(x, y, minX, minY, size) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) / size;\n    y = 32767 * (y - minY) / size;\n\n    x = (x | x << 8) & 0x00FF00FF;\n    x = (x | x << 4) & 0x0F0F0F0F;\n    x = (x | x << 2) & 0x33333333;\n    x = (x | x << 1) & 0x55555555;\n\n    y = (y | y << 8) & 0x00FF00FF;\n    y = (y | y << 4) & 0x0F0F0F0F;\n    y = (y | y << 2) & 0x33333333;\n    y = (y | y << 1) & 0x55555555;\n\n    return x | y << 1;\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if (equals(p1, q1) && equals(p2, q2) || equals(p1, q2) && equals(p2, q1)) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 && area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (p.y > py !== p.next.y > py && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs((data[a] - data[c]) * (data[b + 1] - data[a + 1]) - (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 : Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = { vertices: [], holes: [], dimensions: dim },\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) {\n                result.vertices.push(data[i][j][d]);\n            }\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 9 */
/* unknown exports provided */
/* all exports used */
/*!**************************!*\
  !*** ./src/lib/rtree.js ***!
  \**************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var __WEBPACK_AMD_DEFINE_RESULT__;\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PolygonLookup = PolygonLookup;\n/**\r\n * Exports a `PolygonLookup` constructor, which constructs a data-structure for\r\n * quickly finding the polygon that a point intersects in a (potentially very\r\n * large) set.\r\n */\n\nvar pointInPolygon = function pointInPolygon(point, vs) {\n    // ray-casting algorithm based on\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n    var x = point[0],\n        y = point[1];\n\n    var inside = false;\n    for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0],\n            yi = vs[i][1];\n        var xj = vs[j][0],\n            yj = vs[j][1];\n\n        var intersect = yi > y != yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n        if (intersect) inside = !inside;\n    }\n\n    return inside;\n};\n\n/**\r\n * @property {rbush} rtree A spatial index for `this.polygons`.\r\n * @property {object} polgons A GeoJSON feature collection.\r\n *\r\n * @param {object} [featureCollection] An optional GeoJSON feature collection\r\n *    to pass to `loadFeatureCollection()`.\r\n */\nfunction PolygonLookup(featureCollection) {\n    this.search = function search(x, y) {\n        var bboxes = this.rtree.search([x, y, x, y]);\n        var pt = [x, y];\n        for (var ind = 0; ind < bboxes.length; ind++) {\n            var polyObj = this.polygons[bboxes[ind].polyId];\n            var polyCoords = polyObj.geometry.coordinates[0];\n            if (pointInPolygon(pt, polyCoords)) {\n                var inHole = false;\n                for (var subPolyInd = 1; subPolyInd < polyObj.geometry.coordinates.length; subPolyInd++) {\n                    if (pointInPolygon(pt, polyObj.geometry.coordinates[subPolyInd])) {\n                        inHole = true;\n                        break;\n                    }\n                }\n\n                if (!inHole) {\n                    return polyObj;\n                }\n            }\n        }\n    };\n\n    this.loadFeatureCollection = function loadFeatureCollection(collection) {\n        var bboxes = [];\n        var polygons = [];\n        var polyId = 0;\n\n        function getBoundingBox(poly) {\n            var firstPt = poly[0];\n            var bbox = [firstPt[0], firstPt[1], firstPt[0], firstPt[1]];\n\n            for (var ind = 1; ind < poly.length; ind++) {\n                var pt = poly[ind];\n\n                var x = pt[0];\n                if (x < bbox[0]) {\n                    bbox[0] = x;\n                } else if (x > bbox[2]) {\n                    bbox[2] = x;\n                }\n\n                var y = pt[1];\n                if (y < bbox[1]) {\n                    bbox[1] = y;\n                } else if (y > bbox[3]) {\n                    bbox[3] = y;\n                }\n            }\n\n            return bbox;\n        }\n\n        function indexPolygon(poly) {\n            polygons.push(poly);\n            var bbox = getBoundingBox(poly.geometry.coordinates[0]);\n            bbox.polyId = polyId++;\n            bboxes.push(bbox);\n        }\n\n        function indexFeature(poly) {\n            if (poly.geometry.coordinates[0] !== undefined && poly.geometry.coordinates[0].length > 0) {\n                switch (poly.geometry.type) {\n                    case 'Polygon':\n                        indexPolygon(poly);\n                        break;\n\n                    case 'MultiPolygon':\n                        var childPolys = poly.geometry.coordinates;\n                        for (var ind = 0; ind < childPolys.length; ind++) {\n                            var childPoly = {\n                                type: 'Feature',\n                                properties: poly.properties,\n                                geometry: {\n                                    type: 'Polygon',\n                                    coordinates: childPolys[ind]\n                                }\n                            };\n                            indexPolygon(childPoly);\n                        }\n                        break;\n                }\n            }\n        }\n\n        var rBush = function rbush() {\n\n            this.RBush = function (maxEntries, format) {\n\n                // jshint newcap: false, validthis: true\n                if (!(this instanceof RBush)) return new RBush(maxEntries, format);\n\n                // max entries in a node is 9 by default; min node fill is 40% for best performance\n                this._maxEntries = Math.max(4, maxEntries || 9);\n                this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n                if (format) {\n                    this._initFormat(format);\n                }\n\n                this.clear();\n            };\n\n            RBush.prototype = {\n\n                all: function all() {\n                    return this._all(this.data, []);\n                },\n\n                search: function search(bbox) {\n\n                    var node = this.data,\n                        result = [],\n                        toBBox = this.toBBox;\n\n                    if (!intersects(bbox, node.bbox)) return result;\n\n                    var nodesToSearch = [],\n                        i,\n                        len,\n                        child,\n                        childBBox;\n\n                    while (node) {\n                        for (i = 0, len = node.children.length; i < len; i++) {\n\n                            child = node.children[i];\n                            childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                            if (intersects(bbox, childBBox)) {\n                                if (node.leaf) result.push(child);else if (contains(bbox, childBBox)) this._all(child, result);else nodesToSearch.push(child);\n                            }\n                        }\n                        node = nodesToSearch.pop();\n                    }\n\n                    return result;\n                },\n\n                load: function load(data) {\n                    if (!(data && data.length)) return this;\n\n                    if (data.length < this._minEntries) {\n                        for (var i = 0, len = data.length; i < len; i++) {\n                            this.insert(data[i]);\n                        }\n                        return this;\n                    }\n\n                    // recursively build the tree with the given data from stratch using OMT algorithm\n                    var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n                    if (!this.data.children.length) {\n                        // save as is if tree is empty\n                        this.data = node;\n                    } else if (this.data.height === node.height) {\n                        // split root if trees have the same height\n                        this._splitRoot(this.data, node);\n                    } else {\n                        if (this.data.height < node.height) {\n                            // swap trees if inserted one is bigger\n                            var tmpNode = this.data;\n                            this.data = node;\n                            node = tmpNode;\n                        }\n\n                        // insert the small tree into the large tree at appropriate level\n                        this._insert(node, this.data.height - node.height - 1, true);\n                    }\n\n                    return this;\n                },\n\n                insert: function insert(item) {\n                    if (item) this._insert(item, this.data.height - 1);\n                    return this;\n                },\n\n                clear: function clear() {\n                    this.data = {\n                        children: [],\n                        height: 1,\n                        bbox: empty(),\n                        leaf: true\n                    };\n                    return this;\n                },\n\n                remove: function remove(item) {\n                    if (!item) return this;\n\n                    var node = this.data,\n                        bbox = this.toBBox(item),\n                        path = [],\n                        indexes = [],\n                        i,\n                        parent,\n                        index,\n                        goingUp;\n\n                    // depth-first iterative tree traversal\n                    while (node || path.length) {\n\n                        if (!node) {\n                            // go up\n                            node = path.pop();\n                            parent = path[path.length - 1];\n                            i = indexes.pop();\n                            goingUp = true;\n                        }\n\n                        if (node.leaf) {\n                            // check current node\n                            index = node.children.indexOf(item);\n\n                            if (index !== -1) {\n                                // item found, remove the item and condense tree upwards\n                                node.children.splice(index, 1);\n                                path.push(node);\n                                this._condense(path);\n                                return this;\n                            }\n                        }\n\n                        if (!goingUp && !node.leaf && contains(node.bbox, bbox)) {\n                            // go down\n                            path.push(node);\n                            indexes.push(i);\n                            i = 0;\n                            parent = node;\n                            node = node.children[0];\n                        } else if (parent) {\n                            // go right\n                            i++;\n                            node = parent.children[i];\n                            goingUp = false;\n                        } else node = null; // nothing found\n                    }\n\n                    return this;\n                },\n\n                toBBox: function toBBox(item) {\n                    return item;\n                },\n\n                compareMinX: function compareMinX(a, b) {\n                    return a[0] - b[0];\n                },\n                compareMinY: function compareMinY(a, b) {\n                    return a[1] - b[1];\n                },\n\n                toJSON: function toJSON() {\n                    return this.data;\n                },\n\n                fromJSON: function fromJSON(data) {\n                    this.data = data;\n                    return this;\n                },\n\n                _all: function _all(node, result) {\n                    var nodesToSearch = [];\n                    while (node) {\n                        if (node.leaf) result.push.apply(result, node.children);else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n                        node = nodesToSearch.pop();\n                    }\n                    return result;\n                },\n\n                _build: function _build(items, left, right, height) {\n\n                    var N = right - left + 1,\n                        M = this._maxEntries,\n                        node;\n\n                    if (N <= M) {\n                        // reached leaf level; return leaf\n                        node = {\n                            children: items.slice(left, right + 1),\n                            height: 1,\n                            bbox: null,\n                            leaf: true\n                        };\n                        calcBBox(node, this.toBBox);\n                        return node;\n                    }\n\n                    if (!height) {\n                        // target height of the bulk-loaded tree\n                        height = Math.ceil(Math.log(N) / Math.log(M));\n\n                        // target number of root entries to maximize storage utilization\n                        M = Math.ceil(N / Math.pow(M, height - 1));\n                    }\n\n                    // TODO eliminate recursion?\n\n                    node = {\n                        children: [],\n                        height: height,\n                        bbox: null\n                    };\n\n                    // split the items into M mostly square tiles\n\n                    var N2 = Math.ceil(N / M),\n                        N1 = N2 * Math.ceil(Math.sqrt(M)),\n                        i,\n                        j,\n                        right2,\n                        right3;\n\n                    multiSelect(items, left, right, N1, this.compareMinX);\n\n                    for (i = left; i <= right; i += N1) {\n\n                        right2 = Math.min(i + N1 - 1, right);\n\n                        multiSelect(items, i, right2, N2, this.compareMinY);\n\n                        for (j = i; j <= right2; j += N2) {\n\n                            right3 = Math.min(j + N2 - 1, right2);\n\n                            // pack each entry recursively\n                            node.children.push(this._build(items, j, right3, height - 1));\n                        }\n                    }\n\n                    calcBBox(node, this.toBBox);\n\n                    return node;\n                },\n\n                _chooseSubtree: function _chooseSubtree(bbox, node, level, path) {\n\n                    var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n                    while (true) {\n                        path.push(node);\n\n                        if (node.leaf || path.length - 1 === level) break;\n\n                        minArea = minEnlargement = Infinity;\n\n                        for (i = 0, len = node.children.length; i < len; i++) {\n                            child = node.children[i];\n                            area = bboxArea(child.bbox);\n                            enlargement = enlargedArea(bbox, child.bbox) - area;\n\n                            // choose entry with the least area enlargement\n                            if (enlargement < minEnlargement) {\n                                minEnlargement = enlargement;\n                                minArea = area < minArea ? area : minArea;\n                                targetNode = child;\n                            } else if (enlargement === minEnlargement) {\n                                // otherwise choose one with the smallest area\n                                if (area < minArea) {\n                                    minArea = area;\n                                    targetNode = child;\n                                }\n                            }\n                        }\n\n                        node = targetNode;\n                    }\n\n                    return node;\n                },\n\n                _insert: function _insert(item, level, isNode) {\n\n                    var toBBox = this.toBBox,\n                        bbox = isNode ? item.bbox : toBBox(item),\n                        insertPath = [];\n\n                    // find the best node for accommodating the item, saving all nodes along the path too\n                    var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n                    // put the item into the node\n                    node.children.push(item);\n                    extend(node.bbox, bbox);\n\n                    // split on node overflow; propagate upwards if necessary\n                    while (level >= 0) {\n                        if (insertPath[level].children.length > this._maxEntries) {\n                            this._split(insertPath, level);\n                            level--;\n                        } else break;\n                    }\n\n                    // adjust bboxes along the insertion path\n                    this._adjustParentBBoxes(bbox, insertPath, level);\n                },\n\n                // split overflowed node into two\n                _split: function _split(insertPath, level) {\n\n                    var node = insertPath[level],\n                        M = node.children.length,\n                        m = this._minEntries;\n\n                    this._chooseSplitAxis(node, m, M);\n\n                    var newNode = {\n                        children: node.children.splice(this._chooseSplitIndex(node, m, M)),\n                        height: node.height\n                    };\n\n                    if (node.leaf) newNode.leaf = true;\n\n                    calcBBox(node, this.toBBox);\n                    calcBBox(newNode, this.toBBox);\n\n                    if (level) insertPath[level - 1].children.push(newNode);else this._splitRoot(node, newNode);\n                },\n\n                _splitRoot: function _splitRoot(node, newNode) {\n                    // split root node\n                    this.data = {\n                        children: [node, newNode],\n                        height: node.height + 1\n                    };\n                    calcBBox(this.data, this.toBBox);\n                },\n\n                _chooseSplitIndex: function _chooseSplitIndex(node, m, M) {\n\n                    var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n                    minOverlap = minArea = Infinity;\n\n                    for (i = m; i <= M - m; i++) {\n                        bbox1 = distBBox(node, 0, i, this.toBBox);\n                        bbox2 = distBBox(node, i, M, this.toBBox);\n\n                        overlap = intersectionArea(bbox1, bbox2);\n                        area = bboxArea(bbox1) + bboxArea(bbox2);\n\n                        // choose distribution with minimum overlap\n                        if (overlap < minOverlap) {\n                            minOverlap = overlap;\n                            index = i;\n\n                            minArea = area < minArea ? area : minArea;\n                        } else if (overlap === minOverlap) {\n                            // otherwise choose distribution with minimum area\n                            if (area < minArea) {\n                                minArea = area;\n                                index = i;\n                            }\n                        }\n                    }\n\n                    return index;\n                },\n\n                // sorts node children by the best axis for split\n                _chooseSplitAxis: function _chooseSplitAxis(node, m, M) {\n\n                    var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n                        compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n                        xMargin = this._allDistMargin(node, m, M, compareMinX),\n                        yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n                    // if total distributions margin value is minimal for x, sort by minX,\n                    // otherwise it's already sorted by minY\n                    if (xMargin < yMargin) node.children.sort(compareMinX);\n                },\n\n                // total margin of all possible split distributions where each node is at least m full\n                _allDistMargin: function _allDistMargin(node, m, M, compare) {\n\n                    node.children.sort(compare);\n\n                    var toBBox = this.toBBox,\n                        leftBBox = distBBox(node, 0, m, toBBox),\n                        rightBBox = distBBox(node, M - m, M, toBBox),\n                        margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n                        i,\n                        child;\n\n                    for (i = m; i < M - m; i++) {\n                        child = node.children[i];\n                        extend(leftBBox, node.leaf ? toBBox(child) : child.bbox);\n                        margin += bboxMargin(leftBBox);\n                    }\n\n                    for (i = M - m - 1; i >= m; i--) {\n                        child = node.children[i];\n                        extend(rightBBox, node.leaf ? toBBox(child) : child.bbox);\n                        margin += bboxMargin(rightBBox);\n                    }\n\n                    return margin;\n                },\n\n                _adjustParentBBoxes: function _adjustParentBBoxes(bbox, path, level) {\n                    // adjust bboxes along the given tree path\n                    for (var i = level; i >= 0; i--) {\n                        extend(path[i].bbox, bbox);\n                    }\n                },\n\n                _condense: function _condense(path) {\n                    // go through the path, removing empty nodes and updating bboxes\n                    for (var i = path.length - 1, siblings; i >= 0; i--) {\n                        if (path[i].children.length === 0) {\n                            if (i > 0) {\n                                siblings = path[i - 1].children;\n                                siblings.splice(siblings.indexOf(path[i]), 1);\n                            } else this.clear();\n                        } else calcBBox(path[i], this.toBBox);\n                    }\n                },\n\n                _initFormat: function _initFormat(format) {\n                    // data format (minX, minY, maxX, maxY accessors)\n\n                    // uses eval-type function compilation instead of just accepting a toBBox function\n                    // because the algorithms are very sensitive to sorting functions performance,\n                    // so they should be dead simple and without inner calls\n\n                    // jshint evil: true\n\n                    var compareArr = ['return a', ' - b', ';'];\n\n                    this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n                    this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n                    this.toBBox = new Function('a', 'return [a' + format.join(', a') + '];');\n                }\n            };\n\n            // calculate node's bbox from bboxes of its children\n            function calcBBox(node, toBBox) {\n                node.bbox = distBBox(node, 0, node.children.length, toBBox);\n            }\n\n            // min bounding rectangle of node children from k to p-1\n            function distBBox(node, k, p, toBBox) {\n                var bbox = empty();\n\n                for (var i = k, child; i < p; i++) {\n                    child = node.children[i];\n                    extend(bbox, node.leaf ? toBBox(child) : child.bbox);\n                }\n\n                return bbox;\n            }\n\n            function empty() {\n                return [Infinity, Infinity, -Infinity, -Infinity];\n            }\n\n            function extend(a, b) {\n                a[0] = Math.min(a[0], b[0]);\n                a[1] = Math.min(a[1], b[1]);\n                a[2] = Math.max(a[2], b[2]);\n                a[3] = Math.max(a[3], b[3]);\n                return a;\n            }\n\n            function compareNodeMinX(a, b) {\n                return a.bbox[0] - b.bbox[0];\n            }\n            function compareNodeMinY(a, b) {\n                return a.bbox[1] - b.bbox[1];\n            }\n\n            function bboxArea(a) {\n                return (a[2] - a[0]) * (a[3] - a[1]);\n            }\n            function bboxMargin(a) {\n                return a[2] - a[0] + (a[3] - a[1]);\n            }\n\n            function enlargedArea(a, b) {\n                return (Math.max(b[2], a[2]) - Math.min(b[0], a[0])) * (Math.max(b[3], a[3]) - Math.min(b[1], a[1]));\n            }\n\n            function intersectionArea(a, b) {\n                var minX = Math.max(a[0], b[0]),\n                    minY = Math.max(a[1], b[1]),\n                    maxX = Math.min(a[2], b[2]),\n                    maxY = Math.min(a[3], b[3]);\n\n                return Math.max(0, maxX - minX) * Math.max(0, maxY - minY);\n            }\n\n            function contains(a, b) {\n                return a[0] <= b[0] && a[1] <= b[1] && b[2] <= a[2] && b[3] <= a[3];\n            }\n\n            function intersects(a, b) {\n                return b[0] <= a[2] && b[1] <= a[3] && b[2] >= a[0] && b[3] >= a[1];\n            }\n\n            // sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n            // combines selection algorithm with binary divide & conquer approach\n\n            function multiSelect(arr, left, right, n, compare) {\n                var stack = [left, right],\n                    mid;\n\n                while (stack.length) {\n                    right = stack.pop();\n                    left = stack.pop();\n\n                    if (right - left <= n) continue;\n\n                    mid = left + Math.ceil((right - left) / n / 2) * n;\n                    select(arr, left, right, mid, compare);\n\n                    stack.push(left, mid, mid, right);\n                }\n            }\n\n            // sort array between left and right (inclusive) so that the smallest k elements come first (unordered)\n            function select(arr, left, right, k, compare) {\n                var n, i, z, s, sd, newLeft, newRight, t, j;\n\n                while (right > left) {\n                    if (right - left > 600) {\n                        n = right - left + 1;\n                        i = k - left + 1;\n                        z = Math.log(n);\n                        s = 0.5 * Math.exp(2 * z / 3);\n                        sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (i - n / 2 < 0 ? -1 : 1);\n                        newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\n                        newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\n                        select(arr, newLeft, newRight, k, compare);\n                    }\n\n                    t = arr[k];\n                    i = left;\n                    j = right;\n\n                    swap(arr, left, k);\n                    if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n                    while (i < j) {\n                        swap(arr, i, j);\n                        i++;\n                        j--;\n                        while (compare(arr[i], t) < 0) {\n                            i++;\n                        }while (compare(arr[j], t) > 0) {\n                            j--;\n                        }\n                    }\n\n                    if (compare(arr[left], t) === 0) swap(arr, left, j);else {\n                        j++;\n                        swap(arr, j, right);\n                    }\n\n                    if (j <= k) left = j + 1;\n                    if (k <= j) right = j - 1;\n                }\n            }\n\n            function swap(arr, i, j) {\n                var tmp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = tmp;\n            }\n\n            // export as AMD/CommonJS module or global variable\n            if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n                return rbush;\n            }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if (typeof module !== 'undefined') module.exports = rbush;else if (typeof self !== 'undefined') self.rbush = rbush;else window.rbush = rbush;\n        }();\n\n        collection.features.forEach(indexFeature);\n        this.rtree = new rbush().RBush().load(bboxes);\n        this.polygons = polygons;\n    };\n\n    if (featureCollection !== undefined) {\n        this.loadFeatureCollection(featureCollection);\n    }\n}\n\n/**\r\n * Find the polygon that a point intersects. Execute a bounding-box search to\r\n * narrow down the candidate polygons to a small subset, and then perform\r\n * additional point-in-polygon intersections to resolve any ambiguities.\r\n *\r\n * @param {number} x The x-coordinate of the point.\r\n * @param {number} y The y-coordinate of the point.\r\n * @return {undefined|object} If one or more bounding box intersections are\r\n *    found, return the first polygon that intersects (`x`, `y`); otherwise,\r\n *    `undefined`.\r\n *\r\nPolygonLookup.prototype.search = function search( x, y ){\r\n  var bboxes = this.rtree.search( [ x, y, x, y ] );\r\n  var pt = [ x, y ];\r\n  for( var ind = 0; ind < bboxes.length; ind++ ){\r\n    var polyObj = this.polygons[ bboxes[ ind ].polyId ];\r\n    var polyCoords = polyObj.geometry.coordinates[ 0 ];\r\n    if( pointInPolygon( pt, polyCoords ) ){\r\n      var inHole = false;\r\n      for( var subPolyInd = 1; subPolyInd < polyObj.geometry.coordinates.length; subPolyInd++ ){\r\n        if( pointInPolygon( pt, polyObj.geometry.coordinates[ subPolyInd ] ) ){\r\n          inHole = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if( !inHole ){\r\n        return polyObj;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n*/\n/**\r\n * Build a spatial index for a set of polygons, and store both the polygons and\r\n * the index in this `PolygonLookup`.\r\n *\r\n * @param {object} collection A GeoJSON-formatted FeatureCollection.\r\n *\r\nPolygonLookup.prototype.loadFeatureCollection = function loadFeatureCollection( collection ){\r\n  var bboxes = [];\r\n  var polygons = [];\r\n  var polyId = 0;\r\n\r\n  function indexPolygon( poly ){\r\n    polygons.push(poly);\r\n    var bbox = getBoundingBox( poly.geometry.coordinates[ 0 ] );\r\n    bbox.polyId = polyId++;\r\n    bboxes.push(bbox);\r\n  }\r\n\r\n  function indexFeature( poly ){\r\n    if( poly.geometry.coordinates[ 0 ] !== undefined &&\r\n        poly.geometry.coordinates[ 0 ].length > 0){\r\n      switch( poly.geometry.type ){\r\n        case 'Polygon':\r\n          indexPolygon( poly );\r\n          break;\r\n\r\n        case 'MultiPolygon':\r\n          var childPolys = poly.geometry.coordinates;\r\n          for( var ind = 0; ind < childPolys.length; ind++ ){\r\n            var childPoly = {\r\n              type: 'Feature',\r\n              properties: poly.properties,\r\n              geometry: {\r\n                type: 'Polygon',\r\n                coordinates: childPolys[ ind ]\r\n              }\r\n            };\r\n            indexPolygon( childPoly );\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  collection.features.forEach( indexFeature );\r\n  this.rtree = new RBush().load( bboxes );\r\n  this.polygons = polygons;\r\n};\r\n\r\n*///# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 10 */
/* unknown exports provided */
/* all exports used */
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/***/ (function(module, exports) {

eval("module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2MzYzIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihtb2R1bGUpIHtcclxuXHRpZighbW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xyXG5cdFx0bW9kdWxlLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKCkge307XHJcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcclxuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxyXG5cdFx0aWYoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XHJcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXHJcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xyXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxyXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcclxuXHR9XHJcblx0cmV0dXJuIG1vZHVsZTtcclxufTtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzXG4vLyBtb2R1bGUgaWQgPSAxMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 11 */
/* unknown exports provided */
/* all exports used */
/*!**************************!*\
  !*** ./src/gisplayv1.js ***!
  \**************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _Gisplay = __webpack_require__(/*! ./ES6Test/Gisplay */ 0);\n\nmodule.exports = {\n    createBGMap: function createBGMap() {\n        console.log(\"Start gisplayv2.\");\n        L.mapbox.accessToken = 'pk.eyJ1IjoibG9sYXNkIiwiYSI6ImNpbmxsZDJkejAwOHR2Zm0yZHVwOWV1ejEifQ.SJ6CupBlW0gPic0n-HgY6w';\n        window.map = L.mapbox.map('map', 'mapbox.streets').setView([49.36855556, -81.66371667], 4);\n    },\n\n    startChoropleth: function startChoropleth() {\n        var gisplay = new _Gisplay.Gisplay();\n        var options = {\n            colorScheme: [\"white\", \"yellow\", \"orange\", \"red\"],\n            numberOfClasses: 4,\n            attr: 'f3',\n            legendTitle: 'Fatals'\n        };\n        //var data = new Array();\n        var time = Date.now();\n\n        var reader = new FileReader();\n        reader.onloadend = function () {\n            //new Choropleth(map, null,options);\n\n            var data = JSON.parse(reader.result);\n            //console.log(data);\n            var datareadtimestamp = Date.now();\n            console.log(\"tempo de leitura do ficheiro: \" + (datareadtimestamp - time) / 1000 + \" segundos\");\n\n            /* console.log(window.map)\r\n             console.log(map)*/\n            gisplay.makeChoropleth(window.map, data, options);\n            console.log(\"tempo gisplay: \" + (Date.now() - datareadtimestamp) / 1000 + \" segundos\");\n            console.log(\"tempo total: \" + (Date.now() - time) / 1000 + \" segundos\");\n        };\n        reader.readAsText(document.getElementById(\"file\").files[0]);\n    }\n}; /**\r\n    * This file is the entry point for the Gisplay API\r\n    *///# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2dpc3BsYXl2MS5qcz9kZjBkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBUaGlzIGZpbGUgaXMgdGhlIGVudHJ5IHBvaW50IGZvciB0aGUgR2lzcGxheSBBUElcclxuICovXHJcbmltcG9ydCB7R2lzcGxheX0gZnJvbSAnLi9FUzZUZXN0L0dpc3BsYXknXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIGNyZWF0ZUJHTWFwOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJTdGFydCBnaXNwbGF5djIuXCIpO1xyXG4gICAgICAgIEwubWFwYm94LmFjY2Vzc1Rva2VuID0gJ3BrLmV5SjFJam9pYkc5c1lYTmtJaXdpWVNJNkltTnBibXhzWkRKa2VqQXdPSFIyWm0weVpIVndPV1YxZWpFaWZRLlNKNkN1cEJsVzBnUGljMG4tSGdZNncnO1xyXG4gICAgICAgIHdpbmRvdy5tYXAgPSBMLm1hcGJveC5tYXAoJ21hcCcsICdtYXBib3guc3RyZWV0cycpLnNldFZpZXcoWzQ5LjM2ODU1NTU2LCAtODEuNjYzNzE2NjddLCA0KTtcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnRDaG9yb3BsZXRoOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGdpc3BsYXkgPSBuZXcgR2lzcGxheSgpO1xyXG4gICAgICAgIHZhciBvcHRpb25zID0ge1xyXG4gICAgICAgICAgICBjb2xvclNjaGVtZTogW1wid2hpdGVcIiwgXCJ5ZWxsb3dcIiwgXCJvcmFuZ2VcIiwgXCJyZWRcIl1cclxuICAgICAgICAgICAgLCBudW1iZXJPZkNsYXNzZXM6IDRcclxuICAgICAgICAgICAgLCBhdHRyOiAnZjMnXHJcbiAgICAgICAgICAgICwgbGVnZW5kVGl0bGU6ICdGYXRhbHMnXHJcbiAgICAgICAgfTtcclxuICAgICAgICAvL3ZhciBkYXRhID0gbmV3IEFycmF5KCk7XHJcbiAgICAgICAgdmFyIHRpbWUgPSBEYXRlLm5vdygpO1xyXG5cclxuICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgICAgICByZWFkZXIub25sb2FkZW5kID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvL25ldyBDaG9yb3BsZXRoKG1hcCwgbnVsbCxvcHRpb25zKTtcclxuXHJcbiAgICAgICAgICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShyZWFkZXIucmVzdWx0KTtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhkYXRhKTtcclxuICAgICAgICAgICAgdmFyIGRhdGFyZWFkdGltZXN0YW1wID0gRGF0ZS5ub3coKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJ0ZW1wbyBkZSBsZWl0dXJhIGRvIGZpY2hlaXJvOiBcIiArIChkYXRhcmVhZHRpbWVzdGFtcCAtIHRpbWUpIC8gMTAwMCArIFwiIHNlZ3VuZG9zXCIpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAvKiBjb25zb2xlLmxvZyh3aW5kb3cubWFwKVxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhtYXApKi9cclxuICAgICAgICAgICAgZ2lzcGxheS5tYWtlQ2hvcm9wbGV0aCh3aW5kb3cubWFwLCBkYXRhLCBvcHRpb25zKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJ0ZW1wbyBnaXNwbGF5OiBcIiArIChEYXRlLm5vdygpIC0gZGF0YXJlYWR0aW1lc3RhbXApIC8gMTAwMCArIFwiIHNlZ3VuZG9zXCIpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInRlbXBvIHRvdGFsOiBcIiArIChEYXRlLm5vdygpIC0gdGltZSkgLyAxMDAwICsgXCIgc2VndW5kb3NcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJlYWRlci5yZWFkQXNUZXh0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmlsZVwiKS5maWxlc1swXSk7XHJcbiAgICB9XHJcbn07XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvZ2lzcGxheXYxLmpzIl0sIm1hcHBpbmdzIjoiOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFsQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ })
/******/ ]);